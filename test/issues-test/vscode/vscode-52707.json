{
  "comments":[
    {
      "comment":"This pull request adds support for window transparency on all 3 platforms. (Arch) Linux and Windows 10 has been personally tested, but I couldn't test macOS or Windows 7 (but they should work in theory).\r\n\r\nHere's a few screenshots:\r\n\r\n![](https://cdn.discordapp.com/attachments/297744523910578176/459337983569559563/KWvjnWl.png)\r\n\r\n![](https://yiff.forsale/SoftPalevioletredIndochinesetiger) (made with a custom version of the @be5invis's railgun theme: https://github.com/sylveon/vsc-theme-railgun)\r\n\r\n![](https://yiff.forsale/HoarseEmotionalGlowworm) (spent too much time thinking about \"can I?\" and not enough thinking about \"should I?\")\r\n\r\n![](https://yiff.forsale/BarrenVirtuousJay)",
      "user":"sylveon"
    },
    {
      "comment":"I can confirm that it seems to work on macOS 10.13 (.5, build 17F77).\r\n\r\n![Proof](https://i.imgur.com/QurGSNl.jpg)",
      "user":"denosawr"
    },
    {
      "comment":"Thanks.\n\nSince windows-swca and windows-blurbehind are modules that I wrote solely for this, reviewing those is also appreciated (I'd be willing to transfer ownership to Microsoft too)",
      "user":"sylveon"
    },
    {
      "comment":"Are text over transparent background lost LCD antialiasing?",
      "user":"be5invis"
    },
    {
      "comment":"I haven't seen such thing happen while testing",
      "user":"sylveon"
    },
    {
      "comment":"I know there are some concepts in MS that adopted FDS to Code, but I cannot provide you the images :(",
      "user":"be5invis"
    },
    {
      "comment":"I like the GlassIt-VSC extension, but it cant achieve opaque text.\r\nCan this PR achieve transparency without the blur effect? While leaving text opaque?\r\n\r\nI like having videos playing in the background while coding :-)\r\n\r\nThanks",
      "user":"blahblah23"
    },
    {
      "comment":"Yup that should work. GlassIt-VSC changes the opacity of the whole window, but this only changes the background. You can use the \"transparent\" option of window.compositionAttribute for that.",
      "user":"sylveon"
    },
    {
      "comment":"@be5invis SWCA has no track record of breaking antialiasing. However, NSVisualEffect may cause that effect with non-Cocoa apps, but Electron is not subject to this and works with text antialiasing.",
      "user":"denosawr"
    },
    {
      "comment":"I tested this on macOS with the modified vsc-theme-railgun theme. It works, but the background transparency will revert to fully opaque after a couple window reloads. Besides that, great work on this!",
      "user":"samuelmaddock"
    },
    {
      "comment":"This is looking awesome! ❤️  Hope to see it in the stable releases soon",
      "user":"DRSDavidSoft"
    },
    {
      "comment":"Simply amazing, I'm actually running a copy from the swca branch to have this feature. I'd really like to see this in the next (unstable) vscode release",
      "user":"Janrupf"
    },
    {
      "comment":"Would really like to see it moving forward!",
      "user":"danilocode"
    },
    {
      "comment":"The CI seems to be failing but after inspecting the logs it's due to a flaky connection.",
      "user":"sylveon"
    },
    {
      "comment":"Does this feature have a landing date?",
      "user":"alistair-hmh"
    },
    {
      "comment":"@bpasero 📌📌📌",
      "user":"DRSDavidSoft"
    },
    {
      "comment":"I see the build is failing. Looks like it's related to these:\r\n\r\n(possibly already fixed?)\r\n\r\nhttps://github.com/Microsoft/vscode/issues/59219\r\nhttps://github.com/Microsoft/vscode/issues/56146\r\n\r\n```shell\r\ninternal/streams/legacy.js:59\r\n      throw er; // Unhandled stream error in pipe.\r\n```",
      "user":"alistair-hmh"
    },
    {
      "comment":"The error was due to a mistake during merge. I've fixed it.",
      "user":"sylveon"
    },
    {
      "comment":"@sylveon I've been using this branch on MacOS for a few weeks, thank you!",
      "user":"matthoffner"
    },
    {
      "comment":"> The error was due to a mistake during merge. I've fixed it.\r\n\r\n@sylveon  Awesome! It's building for me now. I see elsewhere on GitHub that you link to this theme: https://github.com/sylveon/vsc-theme-railgun\r\n\r\nBut how do I install/use this theme in a dev version of VSCode? \r\n\r\n\r\n## Edit\r\n\r\nI think I got it, added the source to theme-railgun in the vscode dir and I could select it. But now I'm using it, I do not see any transparency, regardless of the `window.vibrancy` setting I choose. Perhaps I'm doing something wrong. (I have restarted after changing vibrancy setting.)\r\n\r\n<img width=\"1440\" alt=\"screen shot 2018-11-18 at 6 48 55 pm\" src=\"https://user-images.githubusercontent.com/38665769/48679816-a1e10080-eb62-11e8-99b4-3d6a3300fa53.png\">\r\n",
      "user":"alistair-hmh"
    },
    {
      "comment":"What I did to install it was just `git clone`'ing it to `~/.vscode-oss-dev/extensions` with the name `be5invis.theme-railgun-2.3.0`.\r\n\r\nIt seems that the vibrancy does applies, but the terminal behind VSCode has not enough color variations to make it really apparent, maybe try using it over your desktop wallpaper?",
      "user":"sylveon"
    },
    {
      "comment":"> It seems that the vibrancy does applies, but the terminal behind VSCode has not enough color variations to make it really apparent\r\n\r\nI wondered this too, and so I have tried it with various backgrounds, to no effect.\r\n\r\nWhen I put it over a background with clearer variations, I still see no change.\r\n\r\n<img width=\"1440\" alt=\"screen shot 2018-11-19 at 9 41 50 am\" src=\"https://user-images.githubusercontent.com/38665769/48713947-9384fa00-ebdf-11e8-8fe4-b5b9391a74da.png\">\r\n\r\nWhen I open a screenshot of it and test the color values, it's `#232323` all the way down.\r\n\r\n<img width=\"1440\" alt=\"screen shot 2018-11-19 at 9 42 48 am\" src=\"https://user-images.githubusercontent.com/38665769/48713979-a7c8f700-ebdf-11e8-8e69-9eef7ed31e2f.png\">\r\n\r\nIs it possible that I need a specific version of MacOS to see this? I'm on High Sierra.\r\n",
      "user":"alistair-hmh"
    },
    {
      "comment":"You need at least Yosemite, which you obviously have. I don't see why it wouldn't work, probably something that got in during merge. Will have to test.",
      "user":"sylveon"
    },
    {
      "comment":"I tried this pr by build my own version of CodeOSS. It works with 1.29，and looks great! \r\n\r\nCan't wait to see this GREAT feature in the next release. Will you bring us this New Year gift? @sylveon @bpasero ",
      "user":"yisiqi"
    },
    {
      "comment":"It seems that the rendering bugs of the acrylic effect have been fixed in the latest Insider builds:\r\n\r\n![](https://files.charlesmilette.net/UnevenSeriousThylacine)",
      "user":"sylveon"
    },
    {
      "comment":"I found a tiny bug.\r\nWhen main window is maximized or restored,the acrylic effect will temporarily disappear.\r\n![bug](https://user-images.githubusercontent.com/8438475/50056678-3fe3dd00-019a-11e9-9d99-7bbfe7ee1e66.gif)\r\n",
      "user":"12101111"
    },
    {
      "comment":"@12101111 this is a bug in DWM, a component of Windows, nothing an application can fix by itself.",
      "user":"sylveon"
    },
    {
      "comment":"This is amazing. I really hope to see its release. Bellow is the result in Mojave\r\n\r\n![testosx](https://user-images.githubusercontent.com/2594798/50337967-52b53380-0545-11e9-89c9-4f9d7f12a1ad.png)\r\n\r\n",
      "user":"thuy-le"
    },
    {
      "comment":"Note: I zoomed into every single screenshot, and they *all* lack subpixel antialiasing (except for the opaque body text of https://camo.githubusercontent.com/19a8ea2d2d601b3bda46f39b9b6f2574e37b2695/68747470733a2f2f796966662e666f7273616c652f42617272656e56697274756f75734a6179 ).",
      "user":"nyanpasu64"
    },
    {
      "comment":"enableVibrancy suggests that it is a boolean value, but this option isn't\none.\n\nOn Sat, Jan 12, 2019, 03:04 David Refoua <notifications@github.com wrote:\n\n> *@DRSDavidSoft* commented on this pull request.\n> ------------------------------\n>\n> In src/vs/platform/windows/common/windows.ts\n> <https://github.com/Microsoft/vscode/pull/52707#discussion_r247306016>:\n>\n> > @@ -243,6 +243,9 @@ export interface IWindowSettings {\n>  \tcloseWhenEmpty: boolean;\n>  \tsmoothScrollingWorkaround: boolean;\n>  \tclickThroughInactive: boolean;\n> +\ttransparent: boolean;\n> +\tcompositionAttribute: 'none' | 'transparent' | 'blur' | 'acrylic';\n> +\tvibrancy: 'none' | 'appearance-based' | 'light' | 'dark' | 'titlebar' | 'medium-light' | 'ultra-dark';\n>\n> Would you think enableVibrancy instead of vibrancy would be fit here to\n> be better consistent with @Superpencil <https://github.com/Superpencil>'s\n> PR?\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/Microsoft/vscode/pull/52707#pullrequestreview-191930671>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AGJFtosNCxNx1UGGmeSTJXqmApDqkZZ2ks5vCZbzgaJpZM4U0Y60>\n> .\n>\n",
      "user":"sylveon"
    },
    {
      "comment":"**GOD DAMN IT\r\nJUST MERGE IT ALREADY!!!**",
      "user":"tenF"
    },
    {
      "comment":"Comments like this one certainly do not contribute in getting this merged.",
      "user":"sylveon"
    },
    {
      "comment":"@sylveon Can you resolve the conflicts please?",
      "user":"DRSDavidSoft"
    },
    {
      "comment":"Hi, man I am a Mac user and I don't have enough information about using electron or other things. I downloaded vs code today. And I want to make vs code background transparent as u did in the post. I have already tried to access src/vs/ folder but unfortunately I did not be able to access that. There is not any video for making it transparent. Since I don't know how to re-build vs code I did not be able to make vs code transparent. PLEASE, PLEASE make a video tutorial from beginner to the end on how to make vs code transparent. It looks easy for you to make it but I am sure that it is really hard for a beginner programmers like me. I hope you will reply to me. Have a nice day",
      "user":"fffredy"
    },
    {
      "comment":"Hi @fffredy !\r\n\r\nI can prepare an easy and quick tutorial for you if you want to build as a bundled app. As you are a macOS user, you need to download @Superpencil's repository instead, because this @sylveon's repository is still a bit outdated and has compiling problems. Next week, @sylveon will fix it and I will update the tutorial. \r\n\r\n1. You need to have XCode Command Line, `gulp`, `npm` and `yarn` installed. Use Homebrew to install these dependences at https://brew.sh/:\r\n\r\n```bash\r\n/usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\r\n```\r\n\r\n2. Install three packages:\r\n\r\n```bash\r\nbrew install gulp npm yarn\r\n```\r\n\r\n3. Now clone @Superpencil's repository:\r\n\r\n```bash\r\ngit clone -b vibrancy --single-branch https://github.com/Superpencil/vscode.git 'vscode-superpencil' \r\n```\r\n\r\n4. Enter the directory:\r\n\r\n```bash\r\ncd vscode-superpencil\r\n```\r\n\r\n5. Install the dependences and complete the package:\r\n\r\n```bash\r\nyarn\r\n```\r\n\r\n6. Then:\r\n\r\n```bash\r\nyarn run watch\r\n```\r\n\r\nUntil you see the last line \"Finished with completion...\" and press <kbd>Cmd</kbd> + <kbd>Shift</kbd> + <kbd>C</kbd>.\r\n\r\n7. Now run `gulp` selecting macOS:\r\n\r\n```bash\r\ngulp vscode-darwin\r\n```\r\n8. Once completed, one created app is moved outside this directory to a new folder called \"VSCode-darwin\" and enter the folder, you will find \"Code - OSS.app\", you can drop it to the fodler `Applications`.\r\n\r\nAnd copy the settings from @Superpencil to `settings.json`:\r\n\r\n```json\r\n{\r\n    \"workbench.colorCustomizations\": {\r\n        \"activityBar.background\": \"#00000000\",\r\n        \"sideBar.background\": \"#00000000\",\r\n        \"titleBar.activeBackground\": \"#00000000\",\r\n    },\r\n    \"window.enableVibrancy\": \"ultra-dark\"\r\n}\r\n```\r\n\r\n",
      "user":"gusbemacbe"
    },
    {
      "comment":"@sylveon \r\n\r\nI have compiled your repository and received an error:\r\n\r\n```\r\nyarn                                                                                                                                    \r\nyarn install v1.13.0\r\n$ node build/npm/preinstall.js\r\n*** Please use node >=8 and <9.\r\n```\r\n\r\nI use node 10.9.0\r\n\r\n## Update\r\n\r\nI had to uninstall nodejs and npm and to install nvim to install several versions of nodejs and I used 8x for your repository and it worked. \r\n\r\n## Update 2\r\n\r\nUnfortuntely, you need to fix the errors before Microsoft team merge, here are errors:\r\n\r\n```\r\n[00:19:59] Finished 'compile-extensions' after 73 μs\r\n[00:22:02] Error: /data/Gustavo/GitHub/vscode-sylveon/src/vs/workbench/parts/relauncher/electron-browser/relauncher.contribution.ts(89,7): Cannot find name 'isWindows'.\r\n[00:22:02] Error: /data/Gustavo/GitHub/vscode-sylveon/src/vs/code/electron-main/window.ts(27,30): Module '\"../../../../../../../Gustavo/GitHub/vscode-sylveon/src/vs/code/electron-main/theme\"' has no exported member 'THEME_BG_STORAGE_KEY'.\r\n[00:22:02] Finished compilation with 2 errors after 165848 ms\r\n[00:22:02] Error: /data/Gustavo/GitHub/vscode-sylveon/src/vs/workbench/parts/relauncher/electron-browser/relauncher.contribution.ts(89,7): Cannot find name 'isWindows'.\r\n[00:22:02] Error: /data/Gustavo/GitHub/vscode-sylveon/src/vs/code/electron-main/window.ts(27,30): Module '\"../../../../../../../Gustavo/GitHub/vscode-sylveon/src/vs/code/electron-main/theme\"' has no exported member 'THEME_BG_STORAGE_KEY'.\r\n[00:22:02] Finished compilation with 2 errors after 166170 ms\r\ninternal/streams/legacy.js:59\r\n      throw er; // Unhandled stream error in pipe.\r\n      ^\r\n\r\nError: Found 2 errors\r\n    at Stream.<anonymous> (/data/Gustavo/GitHub/vscode-sylveon/build/lib/reporter.js:73:29)\r\n    at _end (/data/Gustavo/GitHub/vscode-sylveon/node_modules/through/index.js:65:9)\r\n    at Stream.stream.end (/data/Gustavo/GitHub/vscode-sylveon/node_modules/through/index.js:74:5)\r\n    at Stream.onend (internal/streams/legacy.js:44:10)\r\n    at emitNone (events.js:111:20)\r\n    at Stream.emit (events.js:208:7)\r\n    at drain (/data/Gustavo/GitHub/vscode-sylveon/node_modules/through/index.js:34:23)\r\n    at Stream.stream.queue.stream.push (/data/Gustavo/GitHub/vscode-sylveon/node_modules/through/index.js:45:5)\r\n    at Stream.end (/data/Gustavo/GitHub/vscode-sylveon/node_modules/through/index.js:15:35)\r\n    at _end (/data/Gustavo/GitHub/vscode-sylveon/node_modules/through/index.js:65:9)\r\nerror Command failed with exit code 1.\r\n```",
      "user":"gusbemacbe"
    },
    {
      "comment":"It's not true that this repo is only for Linux and Windows. Just look at\nthe PR's title.\n\nAs for your compile issue, my repo is a bit out of date. While merging I\nalso updated my module to its latest version and encountered some pretty\nweird issues (even if said version works fine when used with the Terminus\nterminal emulator). I'm hoping to work on that during my school break next\nweek.\n\nOn Fri, Mar 1, 2019, 21:40 Gustavo Reis, <notifications@github.com> wrote:\n\n> @sylveon <https://github.com/sylveon>\n>\n> I have compiled your repository and received an error:\n>\n> yarn\n> yarn install v1.13.0\n> $ node build/npm/preinstall.js\n> *** Please use node >=8 and <9.\n>\n> I use node 10.9.0\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/Microsoft/vscode/pull/52707#issuecomment-468874371>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AGJFtlwjveR1xIGl0-AYEUXyTFTjbs_-ks5vSeSKgaJpZM4U0Y60>\n> .\n>\n",
      "user":"sylveon"
    },
    {
      "comment":"Ah, @sylveon, I misread the title, because there were Mac users who pointed that it did not work yet. I updated the tutorial. When you will fix it, I will update the tutorial for @fffredy. ",
      "user":"gusbemacbe"
    },
    {
      "comment":"Unfortunately, the API for vibrancy changed in a new version of macOS since\nthe initial PR. I have the feeling this is the cause, but I have no methods\nto confirm myself as I don't own any Apple hardware and either no will or\nbad hardware to hackintosh.\n\nOn Sat, Mar 2, 2019, 00:52 Gustavo Reis, <notifications@github.com> wrote:\n\n> Ah, @sylveon <https://github.com/sylveon>, I misread the title, because\n> there were Mac users who pointed that it did not work yet. I updated the\n> tutorial. When you will fix it, I will update the tutorial for @fffredy\n> <https://github.com/fffredy>.\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/Microsoft/vscode/pull/52707#issuecomment-468888861>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AGJFtv7aPE8mVEsrR0hl5REml4xwK2cmks5vShGlgaJpZM4U0Y60>\n> .\n>\n",
      "user":"sylveon"
    },
    {
      "comment":"SetWindowCompositionAttribute() has serious performance issues in Windows 10 Insider Preview Build 1834x and 1884x, causing UI stuck and animation delays when the window is dragged or resized.\r\n\r\nI tested vscode with this pr ,terminus and https://github.com/riverar/sample-win32-acrylicblur. All of theme have this problem in recent Windows insider build, but work well on 1809(build 17763).\r\n\r\n[link to video](https://i.imgur.com/6n5IcMm.gifv)\r\n\r\nI hope some Microsoft employee can fix this bug.",
      "user":"12101111"
    },
    {
      "comment":"The issue I've been experiencing has been fixed by merging with master. The move to a more recent node build probably fixed it.",
      "user":"sylveon"
    },
    {
      "comment":"> The move to a more recent node build probably fixed it.\r\n\r\nYarn still asked me to use node 8x. ",
      "user":"gusbemacbe"
    },
    {
      "comment":"In spite of the node request, it worked, but the app does not recognise the settings:\r\n\r\n![imagem](https://user-images.githubusercontent.com/2257024/53694329-fadc4980-3d8b-11e9-8461-1b5c304a619e.png)\r\n\r\nNor 'windowConfig.vibrancy'. But I have checked that the app has already `windowConfig.vibrancy` in in codes. Strange. \r\n\r\n## Updated\r\n\r\nI added `\"window.transparent\": true`, but nothing worked. \r\n",
      "user":"gusbemacbe"
    },
    {
      "comment":"@gusbemacbe you're missing \"workbench.background\" in your color customization. It should be set to #00000000 too.",
      "user":"sylveon"
    },
    {
      "comment":"@sylveon \r\n\r\n> @gusbemacbe you're missing \"workbench.background\" in your color customization. It should be set to #00000000 too.\r\n\r\nUnfortunately the workbench did not get transparent. But could see the transparent pop-up when I press Ctrl + Shift + P. \r\n\r\nBut I think I did something wrong. I did what I did in that tutorial I have created. Is it something wrong? I ran `gulp vscode-linux-x64`. Is it something wrong?",
      "user":"gusbemacbe"
    },
    {
      "comment":"I am able to get a transparent window but I'm not able to turn off the blur effect. Is this possible on a Mac?\r\n\r\nHere is the settings.json I used to get the transparent windows with the default dark+ theme.\r\n\r\n{\r\n    \"workbench.colorCustomizations\": {\r\n        \"activityBar.background\": \"#00000000\",\r\n        \"sideBar.background\": \"#00000000\",\r\n        \"titleBar.activeBackground\": \"#00000000\",\r\n        \"list.inactiveSelectionBackground\": \"#00000000\",\r\n        \"editor.background\": \"#00000000\",\r\n    },\r\n    \"window.compositionAttribute\":\"transparent\",\r\n    \"window.vibrancy\": \"ultra-dark\",\r\n    \"window.zoomLevel\": 1\r\n}",
      "user":"david02871"
    },
    {
      "comment":"I tried to apply @david02871's codes, no luck. ",
      "user":"gusbemacbe"
    },
    {
      "comment":"@gusbemacbe if you're building and running in development; you have to comment out a line:\r\n\r\n```\r\n    const isDev = !environment.isBuilt || isExtensionDevelopment;\r\n    if (isMacintosh && isDev) {\r\n        return 'native'; // not enabled when developing due to https://github.com/electron/electron/issues/3647\r\n    }\r\n```\r\nin `src/vs/platform/windows/common/windows.ts`.  That's the one thing that stopped me from getting the vibrancy theme when I tried out Superpencil's similar PR (https://github.com/Microsoft/vscode/pull/65215)",
      "user":"drhumlen"
    },
    {
      "comment":"Is anyone working on VSCode reviewing this? Because if not, there's no reason to keep resolving the conflicts.\r\n\r\n...And also I should probably stop coming here hoping for something to happen. 😞 ",
      "user":"drhumlen"
    },
    {
      "comment":"@drhumlen You may ask @bpasero and/or @sbatten, they're assigned to this PR.\r\n\r\nIn any case, I think there is a point or two in resolving the merge conflicts, e.g. when building OSS from source with this patch merged in locally.\r\n\r\nI'm sure they have a lot of stuff on their plate, that's why this is taking so long. As soon as they can pick the transparency task into their review plan, I'm sure we'll get some feedback.",
      "user":"DRSDavidSoft"
    },
    {
      "comment":"How do I apply this on windows? ",
      "user":"Bernardi23"
    },
    {
      "comment":"@Bernardi23 You have two options:\r\n1- Build VS Code from source, with this patch applied in.\r\n2- Wait for maintainers to review and apply this pull request.\r\n\r\nIMO, stick with 2. It may take longer, but the build will be official and in sync with upstream updates.\r\n\r\nIn the meantime, you can 👍 this thread.",
      "user":"DRSDavidSoft"
    },
    {
      "comment":"@DRSDavidSoft I want it now!!! lol\r\n\r\nbut seriously, how do I do it? \r\n\r\nThis is what I did and it's not getting transparent:\r\n\r\n```\r\n$ git clone -b vibrancy --single-branch https://github.com/Superpencil/vscode.git 'vscode-superpencil' \r\n\r\n$ yarn start\r\n\r\n$ yarn run watch\r\n```\r\nThen run `$ ./scripts/code.bat `\r\n\r\nUpdate: I tried running `$ ./scripts/npm.bat install`, but doesn't work neither",
      "user":"Bernardi23"
    },
    {
      "comment":"@drhumlen What is the line you have to comment out? All of these? I'm guessing this doesnt work on windows, but do you know a similar solution for other OS?",
      "user":"Bernardi23"
    },
    {
      "comment":"@Bernardi23: see the comment from @gusbemacbe . Probably the only thing you're missing is to add:\r\n\r\n```\r\n    \"workbench.colorCustomizations\": {\r\n        \"activityBar.background\": \"#00000000\",\r\n        \"sideBar.background\": \"#00000000\",\r\n        \"titleBar.activeBackground\": \"#00000000\",\r\n    },\r\n    \"window.enableVibrancy\": \"ultra-dark\"\r\n```\r\n\r\nto your settings.json ?",
      "user":"drhumlen"
    },
    {
      "comment":"@drhumlen Ive already added those settings. It's still not transparent",
      "user":"Bernardi23"
    },
    {
      "comment":"Anyone succeed to achieve transparency on Linux with compton? Running Fedora + i3 + compton. Built updated branch, running with `./scripts/code.sh`. Added the following lines to settings\r\n```json\r\n{\r\n    \"workbench.colorCustomizations\": {\r\n        \"activityBar.background\": \"#00000000\",\r\n        \"sideBar.background\": \"#00000000\",\r\n        \"titleBar.activeBackground\": \"#00000000\",\r\n        \"list.inactiveSelectionBackground\": \"#00000000\",\r\n        \"editor.background\": \"#00000000\",\r\n        \"workbench.background\": \"#00000000\"\r\n    },\r\n    \"window.compositionAttribute\":\"transparent\",\r\n    \"window.vibrancy\": \"ultra-dark\",\r\n    \"window.transparent\": true,\r\n\t\"window.titleBarStyle\": \"custom\"\r\n}\r\n```\r\nvscode shows the window with entirely black non-transparent background:\r\n![image](https://user-images.githubusercontent.com/6907277/55557229-1079c180-56f2-11e9-95fb-fa154fa4d355.png)\r\n\r\n`ctrl+p` indeed shows transparent popup.\r\n",
      "user":"sergei-dyshel"
    },
    {
      "comment":"Works on Linux KDE when using:\r\n```\r\nfor wid in $(xdotool search --class code); do\r\n    xprop -f _KDE_NET_WM_BLUR_BEHIND_REGION 32c -set _KDE_NET_WM_BLUR_BEHIND_REGION 0 -id $wid\r\n    xprop -f _NET_WM_WINDOW_OPACITY 32c -set _NET_WM_WINDOW_OPACITY 0xdfffffff 0 -id $wid\r\ndone\r\n```",
      "user":"mallgrab"
    },
    {
      "comment":"@mallgrab \r\nAFAIK Setting `_NET_WM_WINDOW_OPACITY` changes opacity of the entire window, including text. You don't need this fork for this to work. Just try high low opacity level such as `0x1fffffff` and you won't see any text:\r\n```\r\nxprop -f _NET_WM_WINDOW_OPACITY 32c -set _NET_WM_WINDOW_OPACITY 0x1fffffff -id $wid\r\n```\r\n",
      "user":"sergei-dyshel"
    },
    {
      "comment":"Beautiful! Is there a way to apply the same transparency to the terminal window and minimap?\r\n\r\nPS:\r\nUse this documentation for reference when it comes to theming it to your liking: https://code.visualstudio.com/api/references/theme-color\r\n\r\n![Screen Shot 2019-04-17 at 1 23 56 AM](https://user-images.githubusercontent.com/3568545/56236424-1f7e4d80-60bc-11e9-9656-da54f59c2b30.jpg)\r\n",
      "user":"Otakumouse"
    },
    {
      "comment":"Hi @Otakumouse, if you do not mind, can you share us this interesting `settings.json` file? ",
      "user":"gusbemacbe"
    },
    {
      "comment":"Sure thing! This will give you the same look and transparency level of my screenshot above.\r\n\r\n\"workbench.colorCustomizations\": {\r\n\r\n    \"activityBar.background\": \"#00000000\",\r\n\r\n    \"sideBar.background\": \"#00000060\",\r\n    \"sideBarSectionHeader.background\": \"#00000020\",\r\n\r\n    \"titleBar.activeBackground\": \"#00000030\",\r\n\r\n    \"statusBar.background\": \"#00000030\",\r\n\r\n    \"list.inactiveSelectionBackground\": \"#00000040\",\r\n    \"list.activeSelectionBackground\": \"#00000040\",\r\n    \"list.hoverBackground\": \"#00000040\",\r\n\r\n    \"editor.background\": \"#00000030\",\r\n    \"editor.lineHighlightBackground\": \"#FFFFFF15\",\r\n    \"editorGroupHeader.tabsBackground\": \"#00000020\",\r\n\r\n    \"workbench.background\": \"#00000000\",\r\n\r\n    \"panel.background\": \"#00000040\",\r\n\r\n    \"terminal.background\": \"#292C33\",\r\n\r\n    \"tab.activeBackground\": \"#00000040\",\r\n    \"tab.inactiveBackground\": \"#00000010\",\r\n\r\n    \"button.background\": \"#00000020\",\r\n    \"button.hoverBackground\": \"#00000040\",\r\n\r\n    \"scrollbarSlider.background\": \"#FFFFFF20\"\r\n},\r\n\r\n",
      "user":"Otakumouse"
    },
    {
      "comment":"No luck so far on trying to make the terminal window transparent same with the other UI elements :P But really loving everything so far! This should be an added feature!\r\n\r\n![Screen Shot 2019-04-17 at 5 00 56 AM](https://user-images.githubusercontent.com/3568545/56243707-d505cc80-60cd-11e9-8308-ed3a76d4e46b.jpg)\r\n\r\n",
      "user":"Otakumouse"
    },
    {
      "comment":"> Works on Linux KDE when using:\r\n> \r\n> ```\r\n> for wid in $(xdotool search --class code); do\r\n>     xprop -f _KDE_NET_WM_BLUR_BEHIND_REGION 32c -set _KDE_NET_WM_BLUR_BEHIND_REGION 0 -id $wid\r\n>     xprop -f _NET_WM_WINDOW_OPACITY 32c -set _NET_WM_WINDOW_OPACITY 0xdfffffff 0 -id $wid\r\n> done\r\n> ```\r\n\r\n@mallgrab \r\n\r\nSorry, but I did not find those codes in any CODE-OS files. Where did you put that? Or is it just the command in the terminal?\r\n",
      "user":"gusbemacbe"
    },
    {
      "comment":"@Otakumouse\r\n\r\nIt worked on macOS, but not on Linux. Linux users of VSCode are out of luck. :-(",
      "user":"gusbemacbe"
    },
    {
      "comment":"@Otakumouse  I finally made the terminal transparent! It's looking absolutely sick! Here's my dark and light themes:\r\n\r\n![dark](https://user-images.githubusercontent.com/36115642/56256852-c1903c80-60a0-11e9-8ff3-88bef7472980.PNG)\r\n![light](https://user-images.githubusercontent.com/36115642/56257032-56933580-60a1-11e9-80e5-c60dcac86e42.PNG)\r\n\r\n\r\nAll you have to do is change the value of `panel.background` to some transparent color. Then you also change `terminal.background` (imo it just looks better when you set this value to be fully transparent)\r\n\r\n\r\n\r\n",
      "user":"Bernardi23"
    },
    {
      "comment":"@Bernardi23 \r\n\r\nYou, as a Windows user, are lucky. Linux users are out of luck. ",
      "user":"gusbemacbe"
    },
    {
      "comment":"@gusbemacbe last I tried it works on Linux too (my setup was Openbox and Compton). Do you have a compositor? You need one. The setting is also different, it's named `window.transparent` and takes `true` or `false` under Linux, not `window.compositionAttribute` or `window.vibrancy`.",
      "user":"sylveon"
    },
    {
      "comment":"Hello Charles @sylveon ,\r\n\r\nI enabled `\"window.transparent\": true;`, but no luck.\r\n\r\nI am using Manjaro KDE. I will check if I have Openbox and Comption installed. ",
      "user":"gusbemacbe"
    },
    {
      "comment":"I have installed Compton, but no luck, see:\r\n\r\n![image](https://user-images.githubusercontent.com/2257024/56257780-db7f4e80-60a3-11e9-9176-5809ca7078a2.png)\r\n\r\nI believe it must be incompatible with KDE. ",
      "user":"gusbemacbe"
    },
    {
      "comment":"Hi @sylveon !\r\n\r\nYou changed yarn (node) version from 8 and 10. I switch from node 8.15 to 10.15.2. But I received like:\r\n\r\n```\r\nyarn add gulp                                                                                         \r\nyarn add v1.15.2\r\n$ node build/npm/preinstall.js\r\n[1/4] Resolving packages...\r\n[2/4] Fetching packages...\r\ninfo vscode-fsevents@0.3.10: The platform \"linux\" is incompatible with this module.\r\ninfo \"vscode-fsevents@0.3.10\" is an optional dependency and failed compatibility check. Excluding it from installation.\r\nerror eslint@5.13.0: The engine \"node\" is incompatible with this module. Expected version \"^6.14.0 || ^8.10.0 || >=9.10.0\". Got \"8.9.1\"\r\nerror Found incompatible module\r\ninfo Visit https://yarnpkg.com/en/docs/cli/add for documentation about this command.\r\n```\r\n",
      "user":"gusbemacbe"
    },
    {
      "comment":"Update your packages (just run `yarn`)",
      "user":"sylveon"
    },
    {
      "comment":"It seems that I found some error, I would like to know if it is normal:\r\n\r\n```\r\n<--- Last few GCs --->\r\n\r\n[4268:0x411c910]   623366 ms: Scavenge 1363.9 (1423.1) -> 1363.5 (1424.1) MB, 8.5 / 0.0 ms  (average mu = 0.182, current mu = 0.033) allocation failure \r\n[4268:0x411c910]   624929 ms: Mark-sweep 1364.2 (1424.1) -> 1364.0 (1424.1) MB, 1553.5 / 0.0 ms  (average mu = 0.105, current mu = 0.016) allocation failure scavenge might not succeed\r\n\r\n\r\n<--- JS stacktrace --->\r\n\r\n==== JS stack trace =========================================\r\n\r\n    0: ExitFrame [pc: 0x2a75a775be1d]\r\n    1: StubFrame [pc: 0x2a75a77110cb]\r\nSecurity context: 0x24d6d789e6e1 <JSObject>\r\n    2: getTokenText [0x204d1e911b11] [/data/Gustavo/GitHub/vscode-swca/node_modules/typescript/lib/typescript.js:~7087] [pc=0x2a75ac8575ea](this=0x204d1e90c181 <Object map = 0x1d13043e8f31>)\r\n    3: /* anonymous */(aka /* anonymous */) [0x171fd69daf31] [/data/Gustavo/GitHub/vscode-swca/node_modules/typescript/lib/typescri...\r\n\r\nFATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory\r\n 1: 0x8dc1c0 node::Abort() [gulp vscode-linux-x64]\r\n 2: 0x8dc20c  [gulp vscode-linux-x64]\r\n 3: 0xad60ae v8::Utils::ReportOOMFailure(v8::internal::Isolate*, char const*, bool) [gulp vscode-linux-x64]\r\n 4: 0xad62e4 v8::internal::V8::FatalProcessOutOfMemory(v8::internal::Isolate*, char const*, bool) [gulp vscode-linux-x64]\r\n 5: 0xec3972  [gulp vscode-linux-x64]\r\n 6: 0xec3a78 v8::internal::Heap::CheckIneffectiveMarkCompact(unsigned long, double) [gulp vscode-linux-x64]\r\n 7: 0xecfb52 v8::internal::Heap::PerformGarbageCollection(v8::internal::GarbageCollector, v8::GCCallbackFlags) [gulp vscode-linux-x64]\r\n 8: 0xed0484 v8::internal::Heap::CollectGarbage(v8::internal::AllocationSpace, v8::internal::GarbageCollectionReason, v8::GCCallbackFlags) [gulp vscode-linux-x64]\r\n 9: 0xed30f1 v8::internal::Heap::AllocateRawWithRetryOrFail(int, v8::internal::AllocationSpace, v8::internal::AllocationAlignment) [gulp vscode-linux-x64]\r\n10: 0xe9c574 v8::internal::Factory::NewFillerObject(int, bool, v8::internal::AllocationSpace) [gulp vscode-linux-x64]\r\n11: 0x113beae v8::internal::Runtime_AllocateInNewSpace(int, v8::internal::Object**, v8::internal::Isolate*) [gulp vscode-linux-x64]\r\n12: 0x2a75a775be1d \r\n[1]    4268 abort (core dumped)  gulp vscode-linux-x64\r\n```\r\n\r\nI did like:\r\n\r\n```\r\nyarn\r\nyarn add gulp\r\nyarn watch\r\ngulp vscode-linux-x64\r\n```\r\n\r\nDid I do something wrong?",
      "user":"gusbemacbe"
    },
    {
      "comment":"You're running out of ram",
      "user":"sylveon"
    },
    {
      "comment":"Too bad, it is why I purchased a new super PC (AMD Ryzen 7 2700X, VGA G﻿a﻿lax GTX 1660 6GB ﻿GDDR﻿5﻿﻿, Biostar Racing X370 GT7 and 16GB RAM) and last week. I will try to test with a new PC.\r\n\r\nI have just tested Code-OSS, no transparency. :-( It must be because of my laptop, but my KDE is totally transparent. Strange. ",
      "user":"gusbemacbe"
    },
    {
      "comment":"> @Otakumouse I finally made the terminal transparent! It's looking absolutely sick! Here's my dark and light themes:\r\n> \r\n> ![dark](https://user-images.githubusercontent.com/36115642/56256852-c1903c80-60a0-11e9-8ff3-88bef7472980.PNG)\r\n> ![light](https://user-images.githubusercontent.com/36115642/56257032-56933580-60a1-11e9-80e5-c60dcac86e42.PNG)\r\n> \r\n> All you have to do is change the value of `panel.background` to some transparent color. Then you also change `terminal.background` (imo it just looks better when you set this value to be fully transparent)\r\n\r\nStill no luck on macOS :D Any leads?\r\n\r\n![settings json 2019-04-17 14-01-02](https://user-images.githubusercontent.com/3568545/56264501-4880fb80-6119-11e9-958f-d6deb4a566f1.jpg)\r\n",
      "user":"Otakumouse"
    },
    {
      "comment":"> @Otakumouse I finally made the terminal transparent! It's looking absolutely sick! Here's my dark and light themes:\r\n> \r\n> ![dark](https://user-images.githubusercontent.com/36115642/56256852-c1903c80-60a0-11e9-8ff3-88bef7472980.PNG)\r\n> ![light](https://user-images.githubusercontent.com/36115642/56257032-56933580-60a1-11e9-80e5-c60dcac86e42.PNG)\r\n> \r\n> All you have to do is change the value of `panel.background` to some transparent color. Then you also change `terminal.background` (imo it just looks better when you set this value to be fully transparent)\r\n\r\nAwesome! Could you share this please?",
      "user":"DevilHandCC"
    },
    {
      "comment":"I think the transparent terminal only works on windows? Everything works fine on macOS except for the terminal :D (or am I just missing something :P)\r\n\r\n",
      "user":"Otakumouse"
    },
    {
      "comment":"I got the transparency to work on macOS as well. But how do I actually install extensions for it? When I search for an extension nothing comes up.",
      "user":"mattpotato"
    },
    {
      "comment":"@matt011,\r\n\r\nCode-OSS disables it. You need to symlink the folder of official VSCode in the terminal:\r\n\r\n```\r\nln -s ~/.vscode ~/.code-oss\r\n```\r\n\r\nThese folders are in your name folder. ",
      "user":"gusbemacbe"
    },
    {
      "comment":"@gusbemacbe Any idea how to apply the same idea on Windows? I did `mklink /d code-oss-dev code-insiders`, but upon running `scripts\\code.bat`, I'm told that the dir already exists.\r\nEdit: It was a typo, the proper way is `mklink /d code-oss-dev \"Code - Insiders/\"`, it loads my settings, but no extensions.",
      "user":"kamenminkov"
    },
    {
      "comment":"This pr took nearly 10 months. Is it still not possible to land this time? @bpasero @sbatten ",
      "user":"yisiqi"
    },
    {
      "comment":"@kamenminkov You can edit product.json and recompile to enable them.\r\nSee two patch from https://aur.archlinux.org/cgit/aur.git/tree/?h=code-git",
      "user":"12101111"
    },
    {
      "comment":"> > Works on Linux KDE when using:\r\n> > ```\r\n> > for wid in $(xdotool search --class code); do\r\n> >     xprop -f _KDE_NET_WM_BLUR_BEHIND_REGION 32c -set _KDE_NET_WM_BLUR_BEHIND_REGION 0 -id $wid\r\n> >     xprop -f _NET_WM_WINDOW_OPACITY 32c -set _NET_WM_WINDOW_OPACITY 0xdfffffff 0 -id $wid\r\n> > done\r\n> > ```\r\n> \r\n> @mallgrab\r\n> \r\n> Sorry, but I did not find those codes in any CODE-OS files. Where did you put that? Or is it just the command in the terminal?\r\n\r\nTerminal, but apparently like @sergei-dyshel said, it blurs the entire window (including the text) which you can apply on vscode without the patch. Seems like the patch isn't compatible with KDE 😔.",
      "user":"mallgrab"
    },
    {
      "comment":"@Otakumouse yeah, I'm guessing it doesn't work on MacOs for some weird reason",
      "user":"Bernardi23"
    },
    {
      "comment":"@DevilHandCC I'll be making this a theme and it'll be available on the marketplace. When I get it on I'll post it here",
      "user":"Bernardi23"
    },
    {
      "comment":"@Otakumouse I don't have a macOS device so I can't really debug this issue.\r\n\r\nI'll also probably try KDE whenever I get time.",
      "user":"sylveon"
    },
    {
      "comment":"Here's what I did for macOS (10.12.6)\r\n\r\n`git clone -b swca --single-branch https://github.com/sylveon/vscode.git`\r\n`cd vscode`\r\n`yarn`\r\n\r\nAdd this to product.json to have extension support:\r\n\r\n`\r\n    \"extensionsGallery\": {\r\n\t    \"serviceUrl\": \"https://marketplace.visualstudio.com/_apis/public/gallery\",\r\n\t    \"cacheUrl\": \"https://vscode.blob.core.windows.net/gallery/index\",\r\n\t    \"itemUrl\": \"https://marketplace.visualstudio.com/items\"\r\n\t}\r\n`\r\n\r\nBuild (took me about 5-10 mins)\r\n`gulp vscode-darwin`\r\n\r\nRun Code - OSS from vscode-darwin folder (same directory as vscode)\r\n\r\n\r\nCopy this to your settings.json. Adjust the colors according to your taste. the most important part here is the window.vibrancy :\r\n\r\n\r\n\r\n{\r\n        \"window.vibrancy\": \"dark\", \r\n        \"workbench.colorCustomizations\": {\r\n\r\n        \"activityBar.background\": \"#5e46465e\",\r\n        \"sideBar.background\": \"#332727d8\",\r\n        \"sideBarSectionHeader.background\": \"#00000000\",\r\n        \r\n        \"titleBar.activeBackground\": \"#00000030\",\r\n        \r\n        \"statusBar.background\": \"#00000030\",\r\n        \r\n        \"list.inactiveSelectionBackground\": \"#00000040\",\r\n        \"list.activeSelectionBackground\": \"#00000040\",\r\n        \"list.hoverBackground\": \"#00000040\",\r\n        \r\n        \"editor.background\": \"#00000000\",\r\n        \"editor.lineHighlightBackground\": \"#FFFFFF15\",\r\n        \"editorGroupHeader.tabsBackground\": \"#3d2d2d20\",\r\n        \"workbench.background\": \"#00000038\",\r\n        \r\n        \"panel.background\": \"#3f383800\",\r\n        \r\n        \"terminal.background\": \"#292c3300\",\r\n        \r\n        \"tab.activeBackground\": \"#00000000\",\r\n        \"tab.inactiveBackground\": \"#00000010\",\r\n    \r\n        \"button.background\": \"#00000020\",\r\n        \"button.hoverBackground\": \"#00000040\",\r\n        \r\n\r\n    \r\n    },  \r\n}\r\n\r\nOnce you save you will see the transparency take effect\r\n\r\n![vscode](https://user-images.githubusercontent.com/38515217/56301869-4a73aa80-616b-11e9-9036-f5c51dc36e5f.png)\r\n\r\n",
      "user":"mattpotato"
    },
    {
      "comment":"> @gusbemacbe Any idea how to apply the same idea on Windows? I did `mklink /d code-oss-dev code-insiders`, but upon running `scripts\\code.bat`, I'm told that the dir already exists.\r\n> Edit: It was a typo, the proper way is `mklink /d code-oss-dev \"Code - Insiders/\"`, it loads my settings, but no extensions.\r\n\r\n@kamenminkov \r\n\r\nFirstly you need to run `gulp vscode-windows-64x` and to open the Code-OSS, then you can run the `mklink`. Actually it is from \"`Code - Insiders`\" to \"`Code - OSS`\". ",
      "user":"gusbemacbe"
    },
    {
      "comment":"@12101111\r\n\r\n> @kamenminkov You can edit product.json and recompile to enable them.\r\n> See two patch from https://aur.archlinux.org/cgit/aur.git/tree/?h=code-git\r\n\r\nHe is using Windows. The settings must be different among VSCode Linux and VSCode Windows. ",
      "user":"gusbemacbe"
    },
    {
      "comment":"> Terminal, but apparently like @sergei-dyshel said, it blurs the entire window (including the text) which you can apply on vscode without the patch. Seems like the patch isn't compatible with KDE pensive.\r\n\r\n@mallgrab, too bad, with my new PC, I am undecided if I will migrate from Manjaro KDE to Ubuntu GNOME or to Kubuntu (for analysing how my icons look good or bad in KDE). I depend on Manjaro KDE for updating and uploading my AUR Arch Linux packages. ",
      "user":"gusbemacbe"
    },
    {
      "comment":"> @Otakumouse I finally made the terminal transparent! It's looking absolutely sick! Here's my dark and light themes:\r\n> \r\n> ![dark](https://user-images.githubusercontent.com/36115642/56256852-c1903c80-60a0-11e9-8ff3-88bef7472980.PNG)\r\n> ![light](https://user-images.githubusercontent.com/36115642/56257032-56933580-60a1-11e9-80e5-c60dcac86e42.PNG)\r\n> \r\n> All you have to do is change the value of `panel.background` to some transparent color. Then you also change `terminal.background` (imo it just looks better when you set this value to be fully transparent)\r\n\r\n![mme_aj](https://user-images.githubusercontent.com/18104031/56312502-8e0ceb00-6150-11e9-9a80-b85945304896.jpg)\r\n",
      "user":"tenF"
    },
    {
      "comment":"Didn't have time to get it on the marketplace, but [here's the github repo](https://github.com/Bernardi23/New-York-Theme/tree/master) with the theme json file, my custom css, vscode settings, and so on:\r\n\r\n",
      "user":"Bernardi23"
    },
    {
      "comment":"Figured out my issue. I was compiling the wrong branch > <\r\nTerminal is now transparent and it looks beautiful with the right wallpaper behind.\r\n\r\n![Screen Shot 2019-04-18 at 6 09 59 AM](https://user-images.githubusercontent.com/3568545/56324147-a9074b80-61a0-11e9-9310-ff9483151126.jpg)\r\n",
      "user":"Otakumouse"
    },
    {
      "comment":"@Otakumouse Curious, were you compiling [this](https://github.com/Microsoft/vscode/pull/65215) branch?",
      "user":"DRSDavidSoft"
    },
    {
      "comment":"> @Otakumouse Curious, were you compiling [this](https://github.com/Microsoft/vscode/pull/65215) branch?\r\n\r\nDon't use that branch since it has some issues making the integrated terminal window transparent. Use this [fork](https://github.com/sylveon/vscode) instead.",
      "user":"Otakumouse"
    },
    {
      "comment":"> > @Otakumouse Curious, were you compiling [this](https://github.com/Microsoft/vscode/pull/65215) branch?\r\n> \r\n> Don't use that branch since it has some issues making the integrated terminal window transparent. Use this [fork](https://github.com/sylveon/vscode) instead.\r\n\r\nThat's what I was asking, so your terminal issues was with Superpencil's fork, right?",
      "user":"DRSDavidSoft"
    },
    {
      "comment":"Unsure how much this will help but on KDE, electron can get blurred properly.\r\nBy npm installing and running this project https://gitlab.com/doom-fr/electron-transparency-demo\r\nAnd running this in a terminal\r\n```\r\nfor wid in $(xdotool search --class electron); do\r\n    xprop -f _KDE_NET_WM_BLUR_BEHIND_REGION 32c -set _KDE_NET_WM_BLUR_BEHIND_REGION 0 -id $wid\r\ndone\r\n```\r\nWill result in proper blur\r\n![image](https://user-images.githubusercontent.com/35150944/56327575-36d04000-617b-11e9-8b46-7da9caf2b096.png)\r\n",
      "user":"mallgrab"
    },
    {
      "comment":"> > > @Otakumouse Curious, were you compiling [this](https://github.com/Microsoft/vscode/pull/65215) branch?\r\n> > \r\n> > \r\n> > Don't use that branch since it has some issues making the integrated terminal window transparent. Use this [fork](https://github.com/sylveon/vscode) instead.\r\n> \r\n> That's what I was asking, so your terminal issues was with Superpencil's fork, right?\r\n\r\nCorrect sir.",
      "user":"Otakumouse"
    },
    {
      "comment":"@Otakumouse Awesome, glad to see this branch has no issues with the integrated terminal.\r\nBTW, Your [screenshot](https://github.com/Microsoft/vscode/pull/52707#issuecomment-484280579) looks super amazing! ❤️ ",
      "user":"DRSDavidSoft"
    },
    {
      "comment":"Too bad that this branch still does not work on Linux, principally on KDE. We have to wait that Charles will try to test on KDE. ",
      "user":"gusbemacbe"
    },
    {
      "comment":"@sergei-dyshel May I ask what will the window look like when @mallgrab's suggested bash is applied to the Electron window?",
      "user":"DRSDavidSoft"
    },
    {
      "comment":"Any progress?",
      "user":"ddzy"
    },
    {
      "comment":"I've noticed that background color you set for the \"sideBar.background\" is shared with the background color of the command window - which makes the command list very hard to see when you open it via SHIFT+CMD+P (especially when you're using transparent colors).\r\n\r\nI've added a new option called \"commandWindow.background\" which lets you style the background color of the command window separately.\r\n\r\nPS: Not sure if there's already a built-in option for this feature. If yes, you can ignore this post ^^;\r\n\r\n![Screen Shot 2019-04-18 at 3 31 14 PM](https://user-images.githubusercontent.com/3568545/56344282-99fbba00-61ef-11e9-8e7a-270b6b7cbfcb.jpg)\r\n\r\n![Screen Shot 2019-04-18 at 3 30 40 PM](https://user-images.githubusercontent.com/3568545/56344507-302fe000-61f0-11e9-852f-27c8c77e17ba.jpg)\r\n\r\n",
      "user":"Otakumouse"
    },
    {
      "comment":"I'm having a few issues to get it to work properly.\r\n![image](https://user-images.githubusercontent.com/25827180/56430742-976c9380-62c7-11e9-93b6-056abe905a83.png)\r\n### Setup:\r\n**OS**: Arch Linux\r\n**Window Manager**: i3-gaps\r\n**Composition Manager**: Compton\r\n### General problem with electron?\r\nI have also noticed the same issue with discord which is an electron app aswell. Transparent windows also wont work with it. But  transparency clearly works as seen by the left window (terminator)\r\n#### Update\r\nhttps://gitlab.com/doom-fr/electron-transparency-demo works without any issues, I guess it isn't an issue with electron... but it works only if GPU acceleration is **enabled**!\r\n![image](https://user-images.githubusercontent.com/25827180/56431233-52e1f780-62c9-11e9-83ae-cac2b2c7b7e3.png)\r\nFirst row has hardware acceleration not disabled, the second one has.",
      "user":"Janrupf"
    },
    {
      "comment":"> @sergei-dyshel May I ask what will the window look like when @mallgrab's suggested bash is applied to the Electron window?\r\n\r\nI don't quite understand your question :smile: @mallgrab posted several bash scripts and we also see that not all Electron windows behave the same.",
      "user":"sergei-dyshel"
    },
    {
      "comment":"`electron-transparency-demo` works on my setup too (i3+compton) while vscode transparency doesn't. \r\n\r\nPatiently waiting for @sylveon for helping us Linux users :smile: ",
      "user":"sergei-dyshel"
    },
    {
      "comment":"@Janrupf You say that the transparent window works when the  is **enabled**?\r\n\r\nWhile inspecting the code, it seems that @sylveon's PR explicitly _disables_ the GPU acceleration when a Linux platform is detected: \r\n\r\nhttps://github.com/Microsoft/vscode/blob/c29d4c802584c231a52f2359d192953e766b0184/src/main.js#L155-L165\r\n\r\nI suggest commenting out this line and building the VS Code to see if you'll get the transparent window.\r\n```js\r\napp.disableHardwareAcceleration(); \r\n```",
      "user":"DRSDavidSoft"
    },
    {
      "comment":"@Janrupf @DRSDavidSoft when I first made this, Electron did not support transparency on Linux with GPU acceleration on, and according to [Electron documentation](https://electronjs.org/docs/api/frameless-window) they still don't:\r\n![image](https://user-images.githubusercontent.com/6440374/56443779-06e08400-62c4-11e9-81db-ee3c47336f45.png)\r\n\r\n\r\nAlso, you forgot to set `\"window.transparent\": true` in your settings file.",
      "user":"sylveon"
    },
    {
      "comment":"But then, according to https://github.com/electron/electron/issues/15947 and https://github.com/electron/electron/issues/16808 they're no longer required but still are documented as so???",
      "user":"sylveon"
    },
    {
      "comment":"@DRSDavidSoft\r\nTried to comment out this line but still no transparency :cry: \r\n\r\n`electron-transparency-demo` indeed works on my setup only when `--disable-gpu` options is NOT specified. I tried to downgrade electron version to match that of vscode (3.1.8) and the older version also works only when GPU acceleration enabled.",
      "user":"sergei-dyshel"
    },
    {
      "comment":"@sylveon You did excellent work! I'd like to mention the fact that your implementation works _perfectly_ on macOS and Windows, and `swca` shows how good of a job you actually did.\r\n\r\nAs it may probably be, Electron could by now already be working with GPU acceleration enabled, but the docs could be lacking to reflect it properly. We may have to ask them about it.\r\n\r\n@sergei-dyshel Did you make sure to put `\"window.transparent\": true` in your `settings.json` file when building the commented out line version of the branch?\r\n\r\nAlso, some screen shots (like what @janrupf posts) would surely be appreciated.\r\n\r\nP. S. I see that you have the same environment as @janrupf. This makes testing out and debugging the issue quicker.\r\n\r\nSince it's very important to get this working on all three platforms, troubleshooting the issue on Linux should be the top priority for us, until the VS Code devs stop ignoring this PR and actually review it. `</rant>`",
      "user":"DRSDavidSoft"
    },
    {
      "comment":"Well,\r\nI have to admit, I also cheated a bit. I removed the check of the Node version to allow vscode to build on Node 11. However, using the requested version didn't change anything. Moreover, the build process of VSCode produces weird output and the watch task wont run, I'm trying to fix that and then report if something is wrong there.",
      "user":"Janrupf"
    },
    {
      "comment":"Yet another Arch Linux user here. I tried current(`c29d4c8`) `sylveon/vscode` `swca` branch(based on [code-git](https://aur.archlinux.org/packages/code-git/) package's PKGBUILD, replaced source url), with color setting described in https://github.com/Microsoft/vscode/pull/52707#issuecomment-484150235), no luck though.\r\n\r\n![Screenshot_20190421_235507](https://user-images.githubusercontent.com/3102803/56472435-00ebce00-6491-11e9-97d5-ea96f47903a0.png)\r\n\r\n*Nevermind about the `DE: KDE` section, because I set `XDG_CURRENT_DESKTOP=KDE` in i3wm for better KDE apps experience :wink:*\r\n\r\nAlso I tried removing `app.disableHardwareAcceleration(); ` mentioned by @DRSDavidSoft , not working either.\r\n\r\nWhen I try https://gitlab.com/doom-fr/electron-transparency-demo, electron window is correctly transparent when `--disable-gpu` is *not applied* on my machine.\r\n\r\nplatform info:\r\n\r\n- compositor: compton\r\n- wm: i3wm\r\n- gpu: AMD RX 590\r\n- driver: amdgpu\r\n- distro: Arch Linux",
      "user":"frantic1048"
    },
    {
      "comment":"@Janrupf `doom-fr/electron-transparency-demo` acts as same as your [screenshot](https://github.com/Microsoft/vscode/pull/52707#issuecomment-484929946) on my machine. I tried removing `app.disableHardwareAcceleration();` from source code, but Code is still opaque. Did you succesfully make Code transparent with GPU acceleration enabled ?",
      "user":"frantic1048"
    },
    {
      "comment":"No, same issues here",
      "user":"Janrupf"
    },
    {
      "comment":"@DRSDavidSoft there's also a check for hardware acceleration when transparency is set, here: https://github.com/Microsoft/vscode/blob/c29d4c802584c231a52f2359d192953e766b0184/src/vs/code/electron-main/window.ts#L162\r\n\r\nSince tomorrow is a holiday in Canada I'll get a Kubuntu vm or something running.",
      "user":"sylveon"
    },
    {
      "comment":"@sylveon \r\nThat was the missing piece of the puzzle!\r\n\r\nAfter removing `app.getGPUFeatureStatus().gpu_compositing !== 'enabled'`, together with previous changes in this thread, I finally got transparency working with i3+compton.\r\n\r\n[r/unixporn](https://www.reddit.com/r/unixporn/) is entering new era now :satisfied:\r\n\r\n![image](https://user-images.githubusercontent.com/6907277/56496499-59a77f00-6502-11e9-9d87-18ec4c4ea094.png)\r\n",
      "user":"sergei-dyshel"
    },
    {
      "comment":"Can confirm that the fix works on KDE. 👍\r\n\r\n![image](https://user-images.githubusercontent.com/35150944/56505290-8b790f80-651b-11e9-980a-5ce2f425b5e5.png)\r\n\r\nFor anyone who's interested in having blur show up on startup. This script will do it for you.\r\nhttps://github.com/esjeon/kwin-forceblur",
      "user":"mallgrab"
    },
    {
      "comment":"Some notes on experimenting with color customizations (on Linux):\r\n\r\n1. I needed to override following colors for entire UI transparency: `activity.background`, `titleBar.activeBackground`, `editorGroupHeader.tabsBackground`, `editor.background`, `workbench.background`.\r\n2. `sideBar.background` also controls quickpick background so making it fully-transparent (`#00000000`) show editor text on quickpick background thus making barely readable.\r\n3. Could not make editor scrollbar transparent.\r\n4. I frequently use per-project color themes so if I want to blend theme's original background color with some opacity I have to override all these colors for each theme. This is somewhat inconvenient. I would prefer to configure opacity levels and numbers and automatically apply them to any theme. I'll try prepare a patch for that.\r\n\r\n@sylveon, thanks for the hard work!",
      "user":"sergei-dyshel"
    },
    {
      "comment":"![image](https://user-images.githubusercontent.com/6440374/56547056-3b657180-654a-11e9-84d9-3152bd31ec70.png)\r\n\r\nI didn't need to apply any patch to the current code for transparency to work. Can't test if it actually works with hardware acceleration on as this is not a real machine",
      "user":"sylveon"
    },
    {
      "comment":"Maybe @sylveon , because of hardware compatibility,\r\n\r\nI leave you the details:\r\n\r\n```\r\nneofetch                                                                        \r\n██████████████████  ████████   gusbemacbe@gusbemacbe-hp-ssd \r\n██████████████████  ████████   ---------------------------- \r\n██████████████████  ████████   OS: Manjaro Linux x86_64 \r\n██████████████████  ████████   Host: HP EliteBook 8460p A0001D02 \r\n████████            ████████   Kernel: 4.19.34-1-MANJARO \r\n████████  ████████  ████████   Uptime: 4 hours, 10 mins \r\n████████  ████████  ████████   Packages: 1992 (pacman) \r\n████████  ████████  ████████   Shell: zsh 5.7.1 \r\n████████  ████████  ████████   Resolution: 1600x900 \r\n████████  ████████  ████████   DE: KDE \r\n████████  ████████  ████████   WM: KWin \r\n████████  ████████  ████████   WM Theme: Sweet-Dark \r\n████████  ████████  ████████   Theme: Monochrome [KDE], Flat-Remix-GTK-Yellow-Darker-S \r\n████████  ████████  ████████   Icons: Papirus-Dark [KDE], Papirus [GTK2/3] \r\n                               Terminal: konsole \r\n                               Terminal Font: Iosevka Nerd Font Mono 12 \r\n                               CPU: Intel i5-2520M (4) @ 3.200GHz \r\n                               GPU: Intel 2nd Generation Core Processor Family \r\n                               Memory: 2446MiB / 7885MiB \r\n```",
      "user":"gusbemacbe"
    },
    {
      "comment":"@mallgrab \r\n\r\n> For anyone who's interested in having blur show up on startup. This script will do it for you.\r\n> https://github.com/esjeon/kwin-forceblur\r\n\r\nThe README is badly documented and confusing. ",
      "user":"gusbemacbe"
    },
    {
      "comment":"Can anyone post the latest version compiled for windows? Or teach me how to compile? I'm getting errors trying to compile it",
      "user":"Bernardi23"
    },
    {
      "comment":"@Bernardi23 \r\n\r\n<details>\r\n  <summary>For Windows users</summary>\r\n\r\n  1. You need to install [Chocolatey](https://chocolatey.org/install) to use;\r\n  2. To install git, run `choco install git` with Power Shell;\r\n  3. To install gulp, nodejs with npm and yarn, run `choco install gulp-cli nodejs yarn`;\r\n  4. I also recommend to install nvm, because @sylveon's repository requires the versions 8x and 10x, run `choco install nvm`\r\n  5. Install two verison versions: `nvm install 8.9.1` and `nvm install 10.15.2`\r\n  6. Switch to 8x for temporary time: `nvm use 8.9.1`;\r\n  7. Now download the @sylveon's repository:\r\n\r\n      ```\r\n      git clone -b swca --single-branch https://github.com/sylveon/vscode.git 'vscode-swca' \r\n      ```\r\n  \r\n  8. Enter the directory:\r\n\r\n      ```\r\n      cd vscode-swca\r\n      ```\r\n9. Install and compile:\r\n\r\n      ```\r\n      yarn\r\n      yarn watch\r\n      gulp vscode-windows\r\n      ```\r\n\r\n    The new VSCode folder is created and moved out of `vscode-swca`\r\n\r\n</details>\r\n\r\n<details>\r\n  <summary>for macOS users</summary>\r\n\r\n\r\n1. You need to have XCode Command Line, `gulp`, `npm` and `yarn` installed. Use Homebrew to install these dependences at https://brew.sh/:\r\n\r\n   ```bash\r\n   /usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\r\n   ```\r\n\r\n2. Install three packages:\r\n\r\n   ```bash\r\n   brew install gulp npm yarn\r\n   ```\r\n\r\n3. I also recommend to install nvm, because @sylveon's repository requires the versions 8x and 10x, run:\r\n\r\n  ```bash\r\n  brew install nvm\r\n  ```\r\n\r\n4. Install two verison versions: `nvm install 8.9.1` and `nvm install 10.15.2`\r\n5. Switch to 8x for temporary time: `nvm use 8.9.1`;\r\n6. Now clone @Superpencil's repository:\r\n\r\n   ```bash\r\n   git clone -b swca --single-branch https://github.com/sylveon/vscode.git 'vscode-swca'\r\n   ```\r\n\r\n7. Enter the directory:\r\n\r\n   ```bash\r\n   cd vscode-swca\r\n   ```\r\n\r\n8. Install the dependences and complete the package:\r\n\r\n  ```bash\r\n   yarn\r\n  ```\r\n\r\n7. Then:\r\n\r\n   ```bash\r\n   yarn run watch\r\n   ```\r\n\r\n    Until you see the last line \"Finished with completion...\" and press <kbd>Cmd</kbd> + <kbd>Shift</kbd> + <kbd>C</kbd>.\r\n\r\n8. Now run `gulp` selecting macOS:\r\n\r\n   ```bash\r\n   gulp vscode-darwin\r\n   ```\r\n\r\n    The new VSCode folder is created and moved out of `vscode-swca`\r\n</details>",
      "user":"gusbemacbe"
    },
    {
      "comment":"@gusbemacbe I just get node-gyp errors. Have tried a bunch of solutions for it but still cant make it work. Can anyone compile it and upload it?",
      "user":"Bernardi23"
    },
    {
      "comment":"For everyone interested, I've coded a patch which does (4) from my last comment https://github.com/Microsoft/vscode/pull/52707#issuecomment-485540875: allows configuring background opacity for any theme. See [commit](https://github.com/sergei-dyshel/vscode/commit/c370f68d39372a794161bf901ed7f51374d97e6e) and [usage instructions](https://github.com/sergei-dyshel/vscode/blob/master/README.fork.md).",
      "user":"sergei-dyshel"
    },
    {
      "comment":"@Bernardi23 @matt011 @gusbemacbe this isn't a tech support thread. Please keep conversations here to only build issues that are caused by this change, not regular build issues.\r\n\r\nPS: If you haven't checked yet, [the wiki has build instructions](https://github.com/Microsoft/vscode/wiki/How-to-Contribute#prerequisites)",
      "user":"sylveon"
    },
    {
      "comment":"@sylveon \r\n\r\nI knew those instrucitons. Who asked for help was Bernand, and not me. Without analysis, help and judgement, Microsoft member would not approve your pull request and would not trust it. \r\n\r\nBut finally, the fork of @sergei-dyshel works better on Manjaro KDE. I am not sure if you will reconsider Sergei's PR to yours. Decision is yours. Here is the proof:\r\n\r\n![image](https://user-images.githubusercontent.com/2257024/56869115-734d3880-69d2-11e9-8e03-0625b9927975.png)\r\n",
      "user":"gusbemacbe"
    },
    {
      "comment":"IMO, @sergei-dyshel, you should make a PR with your changes to @sylveon's branch \r\n\r\nI find the automatic color transparency level patch very useful.\r\n\r\nThat way, the macOS and Windows users could also benefit from your edits.\r\n\r\nMaybe it can be conditionally enabled via a flag in the `settings.json`?",
      "user":"DRSDavidSoft"
    },
    {
      "comment":"@sergei-dyshel \r\n\r\n1. I think you need to path blur option.\r\n2. Two workbench custiomisation options are not allowed: `editorGroup.emptyBackground.opacity`\r\nand `terminal.background.opacity`",
      "user":"gusbemacbe"
    },
    {
      "comment":"I consider my patch just a quick-and-dirty proof of concept - riding on theme color to specify just the opacity with full #RRGGBBAA value seems pretty hacky to me and unlikely to be considered seriously by vscode devs. That's why I didn't open PR for that.\r\n\r\n@DRSDavidSoft \r\nI didn't quite understand your question. Transparency levels are only applied when you override them in `settings.json`. If you don't - the patch does nothing. There is nothing to enable in `settings.json`...\r\n\r\n@gusbemacbe \r\n1. I don't see connection between color overriding and blurring.\r\n2. What do you mean by saying \"not allowed\"?",
      "user":"sergei-dyshel"
    },
    {
      "comment":"@sergei-dyshel \r\n\r\n> I consider my patch just a quick-and-dirty proof of concept - riding on theme color to specify just the opacity with full #RRGGBBAA value seems pretty hacky to me and unlikely to be considered seriously by vscode devs.\r\n\r\nStill, it's an impressive patch and I think there's a place for it in VS Code (or maybe even as an extension?)\r\n\r\n> I didn't quite understand your question. Transparency levels are only applied when you override them in `settings.json`. If you don't - the patch does nothing. There is nothing to enable in `settings.json`...\r\n\r\nWhat I meant to suggest is to put a _separate_ flag to enable/disable your patch, so we could have control over whether it changes the alpha levels in the #RRGGBB colors from the theme.\r\n\r\n<details><summary>Click here to show an example of what I mean.</summary>\r\n<p>\r\n\r\nfor example, something like this flag:\r\n```js\r\n{\r\n    \"window.transparencyAlphaSource\": \"theme\",  // alpha values sourced from the theme\r\n    \"window.transparencyAlphaSource\": \"apply\",  // alpha values applied from the settings.json customization\r\n    \"window.transparencyAlphaSource\": \"auto\"    // decide whether the theme source contains the alpha values\r\n}\r\n```\r\n\r\nIn other words, the user decides whether the alpha values should be sourced from the theme, the color customizations, or automatically.\r\n\r\nBy `auto` I mean that if a theme contains the appropriate alpha values, VS Code should just use those values and not apply your patch (i.e. modify anything).  \r\n\r\nOtherwise – and only _if_ the user flag is set to true – your patch would automatically modify the theme's alpha values according to the workbench color customizations.\r\n\r\n</p>\r\n</details>\r\n\r\nI hope this clears it up!",
      "user":"DRSDavidSoft"
    },
    {
      "comment":"@sergei-dyshel \r\n\r\n> I don't see connection between color overriding and blurring.\r\n\r\nWe need blur to make the text legible to read. Without blur, it is hard to read the text. \r\n\r\n> What do you mean by saying \"not allowed\"?\r\n\r\n![image](https://user-images.githubusercontent.com/2257024/56909801-5753a080-6a7f-11e9-9860-8b3ca3ce2143.png)\r\n",
      "user":"gusbemacbe"
    },
    {
      "comment":"@DRSDavidSoft\r\nSo if I understand you correctly you need this kind of switch to handle the situation when one uses both \"normal\" and transparency-enabled themes. Because defining `\"window.transparencyAlphaSource\": \"theme\"` globally is equivalent to not using any `*.opacity: ...` customizations, as I said.\r\n\r\nNow if you use both kinds of themes you would like to have smth. like that in `settings.json`:\r\n```javascript\r\n\"workbench.colorCustomizations\": {\r\n    // applied to all themes\r\n    \"panel.background.opacity\": \"#000000e0\"\r\n    \"[MyTransparentTheme]\": {\r\n        // not not apply global opacity customizations here\r\n        \"window.transparencyAlphaSource\": \"theme\"\r\n    }\r\n}\r\n```\r\nSince strings are not allowed in theme customization, I can define some *special* theme color and special value for it (say, `#00000000`) which would mean `\"window.transparencyAlphaSource\": \"theme\"`. But again, we are abusing theme colors to specify non-color values (boolean in this example) and this is not a proper solution.\r\n\r\nAs for `\"window.transparencyAlphaSource\": \"auto\"` I don't think its possible to implement it easily since this requires to check ALL theme colors (including customization) for alpha value before applying ANY color and this would probably kill performance (unless we cache it somehow).\r\n\r\n@gusbemacbe\r\nRegarding \"not allowed\" options: my fault, fixed my fork, try updated branch now.\r\n\r\nRegarding blur, if I understand correctly the only thing that can be blurred is background behind main VScode window. This is done by OS/compositor and the PR only instructs it to do so. As I said, my patch has nothing to do with it, you should just use the options @sylveon implemented for your OS. Personally I don't like blur since I use tiling WM so I always see the wallpaper \"through\" my windows and using blur kind of ruins the aesthetics. By choosing \"right\" wallpapers and opacity levels I manage to make text always clearly readable.\r\n\r\nNow if you talk about blurring some VScode elements behind *other* VScode elements, I'm not sure that's even possible in Electron and most probably out of the scope of this PR. Currently the most annoying example of this are quickpick windows: these are controlled by `sideBar.background` so if you make sidebar transparent then you see editor text through quickpick items text making the later unreadable. Unfortunately I have to solution for that besides making sidebar almost opaque.",
      "user":"sergei-dyshel"
    },
    {
      "comment":"@sergei-dyshel\r\n\r\nYou're correct about the performance and caching issue.\r\n\r\nI don't know to what degree the devs will be willing to help with this, but if they could implement an API for theme customization (not just for adjusting alpha values) - it would potentially help with this.\r\n\r\nI guess it will be an issue for another time -- and in the meantime, your patch does the job quite wonderfully.",
      "user":"DRSDavidSoft"
    },
    {
      "comment":"hello   \r\nHow do I use this",
      "user":"zhao-kang"
    },
    {
      "comment":"Will precompiled binary released for this project (I am using windows x64). I've followed @gusbemacbe 's instruction but met this error. (I used nodejs version 8.10.0 from nvm as this project requires some specific version of node)\r\n![image](https://user-images.githubusercontent.com/28442838/58384256-49f3ec80-8012-11e9-9e90-efe8a8f971fa.png)\r\nYarn exits after this\r\n",
      "user":"ZZYSonny"
    },
    {
      "comment":"Follow this: https://github.com/microsoft/vscode/wiki/How-to-Contribute#prerequisites\r\n\r\nYou need Node 10.15.1 at least",
      "user":"sylveon"
    },
    {
      "comment":"Guys do I have to fake cancer and make this my death wish to get this branch merged?",
      "user":"tenF"
    },
    {
      "comment":"I tried @sergei-dyshel 's fork on a linux machine, finally, the transparency works well :tada: \r\n\r\n**Distro**: Arch Linux\r\n**WM**: sway\r\n**GPU**:  Intel Iris Plus Graphics 640\r\n**Source(currently master of https://github.com/sergei-dyshel/vscode )**: https://github.com/sergei-dyshel/vscode/tree/0e54ec2a41cf5d8471b02d84c251d16ade160c0b\r\n\r\n![screenshot_2019-06-20_16-31-10_079589102](https://user-images.githubusercontent.com/3102803/59834073-f27b3f00-9379-11e9-90ca-5122da3796e4.png)\r\n",
      "user":"frantic1048"
    },
    {
      "comment":"Unfortunately after long evaluation of transparency PR I've came to conclusion that the performance penalty it brings upon my 4-year old laptop is unbearable, so for now I'm stopping any work on that. Also I tried to rebase it on latest vscode version (1.35.1) and couldn't make it.\r\n\r\nI renamed current branch (with the PR and my changes incorporated) to [transparency](/sergei-dyshel/vscode/tree/transparency) and will use `master` branch for my tweaks only.",
      "user":"sergei-dyshel"
    },
    {
      "comment":"Will there be a blur transparency effect immediately after enabling the respective options in settings.json?",
      "user":"mkanet"
    },
    {
      "comment":"No\n\nOn Sun, Jun 30, 2019, 05:56 MKANET <notifications@github.com> wrote:\n\n> Will there be a blur transparency effect immediately after enabling the\n> respective options in settings.json?\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/microsoft/vscode/pull/52707?email_source=notifications&email_token=ABRELNVS5RAM2XVEUWAESNLP5B7NJA5CNFSM4FGRR22KYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGODY4I6OA#issuecomment-507023160>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABRELNQR3IVZ6UNWEZ5OS33P5B7NJANCNFSM4FGRR22A>\n> .\n>\n",
      "user":"sylveon"
    },
    {
      "comment":"The same statement as in https://github.com/microsoft/vscode/pull/65215#issuecomment-507268602 applies to this feature as well. Using features in Electron (or even having to introduce a native module for that purpose) comes at the risk of being exposed to exotic bugs because not a lot of other Electron applications are using these features and Electron is constantly moving forward with latest Chrome updates. \r\n\r\nTo give concrete examples: VSCode is supporting macOS sierra native tabs as well as simple fullscreen support and only these 2 were a constant source of issues and frustration when they were not working anymore (see https://github.com/microsoft/vscode/issues/35361, https://github.com/microsoft/vscode/issues/75054). \r\n\r\nEven though Electron exposes an API to set windows as transparent, there is no guarantee that this feature will remain supported in future updates.\r\n\r\nSorry for not posting this earlier.",
      "user":"bpasero"
    },
    {
      "comment":"@bpasero What you are saying makes a lot of sense. New features have the potential to introduce unintended bugs and issues. At the same time, this almost sounds like argument against adding new features, which is probably not what you are getting at.\r\n\r\n> Even though Electron exposes an API to set windows as transparent, there is no guarantee that this feature will remain supported in future updates.\r\n\r\nThat would be a breaking API change. \r\n\r\n\r\nAnyways sorry for the additional noise!",
      "user":"musm"
    },
    {
      "comment":"Currently, there are a couple of applications using this, including the Terminus terminal. The method used is also somewhat similar to what electron-vibrancy does, which is rather popular.",
      "user":"sylveon"
    },
    {
      "comment":"Unfortunately, it does not work on a new super computer with powerful memory RAM and with with powerful processor, graphics and video cards.\r\n\r\nThe terminal also told that it is out of RAM memory even if I have 16GB RAM memory. \r\n\r\n![image](https://user-images.githubusercontent.com/2257024/60543904-ea15f300-9ced-11e9-8a77-034d4df852bc.png)\r\n",
      "user":"gusbemacbe"
    },
    {
      "comment":"You are on Linux but did not set window.transparent, neither did you set workbench.background",
      "user":"sylveon"
    },
    {
      "comment":"@sylveon \r\n\r\nUnfortunately it did not work either:\r\n\r\n![image](https://user-images.githubusercontent.com/2257024/60547577-6ca2b080-9cf6-11e9-9bfe-b054c3d7e72e.png)\r\n",
      "user":"gusbemacbe"
    },
    {
      "comment":"Yeah, I currently commented out linux support because i refactored the code to allow hot reload of settings. I'm working on repairing Linux functionality",
      "user":"sylveon"
    },
    {
      "comment":"@musm \r\n\r\n> New features have the potential to introduce unintended bugs and issues. At the same time, this almost sounds like argument against adding new features, which is probably not what you are getting at.\r\n\r\nOh, do not get me wrong. My statement is exclusively for adding new features that leverage non-trivial, non-commonly-used API in Electron. For example, VSCode is using the Sierra native tabs API and I have not seen any other Electron application supporting that so far. As such, I feel like VSCode is the only provider of feedback on this feature if something breaks. \r\n\r\nAdding features that can be implemented with standard HTML/JS/CSS is no problem at all and I am happy to maintain them. \r\n\r\n> That would be a breaking API change.\r\n\r\nIf Chrome decides to discontinue support for a feature Electron exposes as API, I would think that there is not a lot Electron can do to continue support for such an API. On top of that, it does not have to be a breaking API change, it could also mean that a certain feature is simply not working properly anymore. As for the example of simple fullscreen on macOS, the feature is still working in Electron 4, but with a horrible 10s delay and freeze which makes it unusable for us.",
      "user":"bpasero"
    },
    {
      "comment":"@sylveon \r\nMac under vscode 1.36.0 is currently not working.",
      "user":"tiansin"
    },
    {
      "comment":"@tiansin this change hasn't been merged into the source code so it won't work with any official release.",
      "user":"sylveon"
    },
    {
      "comment":"What will it take to get this merged?",
      "user":"bshyong"
    },
    {
      "comment":"I don't think it's getting merged anytime soon. However, I will keep this fork up to date when I think to do it to prove that this feature is more stable than they think it is. It's already been open for one year and it hasn't severely broken yet.",
      "user":"sylveon"
    },
    {
      "comment":"EDIT: found the solution,  I had to change `watch --max_old_space_size`  from `4095` to `6000`. If anyone stuck on this, you open `package.json` and play around with the values under `scripts` section.\r\n\r\n\r\nTrying to build this PR but no luck so far, \r\n`yarn `succeeded but `yarn watch` not. \r\n here is the error output: \r\n![Annotation](https://user-images.githubusercontent.com/48618675/61160829-5c15e580-a501-11e9-938f-b4dba19d44ec.png)\r\n",
      "user":"amrbashir"
    },
    {
      "comment":"Guys you have to check this out:\r\nhttps://github.com/microsoft/vscode/issues/32257#issuecomment-510882772",
      "user":"tenF"
    },
    {
      "comment":"I am going ahead and close this PR for the reasons outlined: We currently do not accept more features that are Electron specific. We have seen to many issues lately when updating to newer Electron versions and playing the catch-up game is very painful.",
      "user":"bpasero"
    },
    {
      "comment":"@sylveon \r\nDo you have any plan rebasing this patch on current version of vscode? I tried to do it by myself but ran into non-trivial changes (deleted/moved files etc.)?",
      "user":"sergei-dyshel"
    },
    {
      "comment":"No",
      "user":"sylveon"
    },
    {
      "comment":"here's my fix of merge conflicts.\r\nI'm new to typescript and electron but I will try my best to keep this work in latest vscode.\r\nhttps://github.com/rogeraabbccdd/vscode/commit/f3eb106929f8731ba9b96b17134b651962b38634",
      "user":"rogeraabbccdd"
    },
    {
      "comment":"> \r\n> \r\n> I am going ahead and close this PR for the reasons outlined: We currently do not accept more features that are Electron specific. We have seen to many issues lately when updating to newer Electron versions and playing the catch-up game is very painful.\r\n\r\nNo Pain No Gain",
      "user":"NicTanghe"
    },
    {
      "comment":"Can someone give me the full instructions on how to build / install this on windows 10?\r\nHavent build a fork yet and i have no idea how to do that.",
      "user":"NicTanghe"
    },
    {
      "comment":"@NicTanghe \r\n\r\nI put the instructions for macOS and Windows users here deeply above, but you can jump to the direct link: https://github.com/microsoft/vscode/pull/52707#issuecomment-486854773",
      "user":"gusbemacbe"
    },
    {
      "comment":"Why won't this be merged?",
      "user":"codic12"
    },
    {
      "comment":"Sorry for disturbing you guys.\r\n\r\nI made a smaller transparent patch for latest 1.39.2 version,\r\nwith several essential changes to make transparency work:\r\n\r\nhttps://github.com/frantic1048/pkgbuilds/blob/master/code-transparent/transparent.diff\r\n\r\nThe directory is a ready-to-build Arch Linux package(also synced to AUR: https://aur.archlinux.org/packages/code-transparent/ ). So if you are an Arch Linux user, you can directly build it with [`makepkg`](https://wiki.archlinux.org/index.php/Makepkg#Usage) or any other [AUR helpers.](https://wiki.archlinux.org/index.php/AUR_helpers).\r\n\r\nIf you want to use the patch alone (without corresponding PKGBUILD for building Arch Linux package), be sure to check out the [post_install message](https://github.com/frantic1048/pkgbuilds/blob/master/code-transparent/code-transparent.install\r\n) for troubleshooting after building.\r\n\r\nTested on Arch Linux, i3wm/compton/amdgpu, and Swaywm/intel.\r\n\r\n![QegF](https://user-images.githubusercontent.com/3102803/67377683-a4d94200-f5b8-11e9-9afc-0c8af7e6cd5d.png \"screenshot\")\r\n\r\n\r\n---\r\n\r\nIt's a bit sad to see this PR was closed. And I appreciate much to guys making effort for this feature. :)",
      "user":"frantic1048"
    },
    {
      "comment":"@frantic1048 Thank you!",
      "user":"codic12"
    },
    {
      "comment":"Hello @frantic1048 \r\n\r\nI would like to install it into `/opt/` instead of `/usr/`. And does it work with VSCode **Insiders**? \r\n\r\nI use nvm. I installed electron, gulp and yarn installed via npm from nvm. How to apply it to PKGBUILD?",
      "user":"gusbemacbe"
    },
    {
      "comment":"@gusbemacbe \r\n\r\n> I would like to install it into `/opt/` instead of `/usr/`\r\n\r\nIf you want to do this, you may change the `/usr/lib/$_pkgname` lines to `/opt/$_pkgname`, and check if any other things are broken. Paths like `/usr/share/applications/` `/usr/share/metainfo/` ... are necessary to make your desktop/shell environment recognize Code well.\r\n\r\nOr, are you just want it to co-exist with the `community/code` package? This is possible, by touching some path related lines, and the startup script. I made the package on top of `community/code` for minimal changes, as a result, it conflicts with the `community/code` package. However, this could be improved.\r\n\r\n> And does it work with VSCode Insiders?\r\n\r\nI'm not sure how cutting-edge the Insiders version is. There is an [aur/code-git](https://aur.archlinux.org/packages/code-git/) package, which builds from the current https://github.com/microsoft/vscode master branch. You could insert the patch( [transparent.diff](https://github.com/frantic1048/pkgbuilds/blob/master/code-transparent/transparent.diff) ) into `code-git`, and apply the patch in its PKGBUILD.\r\n\r\nIf you mean the exact Insiders version, there is an [`aur/visual-studio-code-insiders`](https://aur.archlinux.org/packages/visual-studio-code-insiders/) package. It is a binary(compiled) package from Microsoft, I'm not sure which source it is built from. On theory, you can make the same change as my patch to the compiled code, but that could be very dirty, and VS Code may complain to you about a corrupt version all day(since compiled code was modified). If you could find where the Insider version's source, you can do the same way as in `aur/code-git` to apply the patch.\r\n\r\n> I use nvm. I installed electron, gulp and yarn installed via npm from nvm. How to apply it to PKGBUILD?\r\n\r\nHmmm, are you using Arch Linux? You do not have to install these packages via npm. There are electron gulp and yarn in the official repository. Besides, `aur/code-transparent` is like `community/code`, is already patched to use `electron` and other self-included dependencies like `node`, `ripgrep` from the official repository.\r\n\r\n---\r\n\r\nBy the way, there is a prebuilt package for `aur/code-transparent` in [archlinuxcn](https://github.com/archlinuxcn/mirrorlist-repo) repository.",
      "user":"frantic1048"
    },
    {
      "comment":"@frantic1048 \r\n\r\nI got it, but a small error, before, check the versions:\r\n\r\n* Version\r\n```\r\nnode --version\r\nv10.16.3\r\nnpm --version\r\n6.9.0\r\ngulp --version\r\nCLI version: 2.2.0\r\nLocal version: 4.0.2\r\nyarn --version\r\n1.17.3\r\nelectron --version\r\nv4.2.12\r\n```\r\n\r\n* Where\r\n```\r\nwhich {electron,gulp,node,npm,yarn}\r\n/home/gusbemacbe/node_modules/.bin/electron\r\n/home/gusbemacbe/node_modules/.bin/gulp\r\n/home/gusbemacbe/.nvm/versions/node/v10.16.3/bin/node\r\n/home/gusbemacbe/.nvm/versions/node/v10.16.3/bin/npm\r\n/home/gusbemacbe/node_modules/.bin/yarn\r\n```\r\n\r\nAll packages libsecret, libx11, libxkbfile and  ripgrep are installed.\r\n                          \r\n```\r\n> node tools/copy-driver-definition.js\r\n\r\n../../../../../../node_modules/@types/unist/index.d.ts:31:20 - error TS2304: Cannot find name 'unknown'.\r\n\r\n31     [key: string]: unknown;\r\n                      ~~~~~~~\r\n\r\n\r\n../../../../../../node_modules/@types/unist/index.d.ts:40:20 - error TS2304: Cannot find name 'unknown'.\r\n\r\n40     [key: string]: unknown;\r\n                      ~~~~~~~\r\n\r\n\r\n../../../../../../node_modules/@types/unist/index.d.ts:97:12 - error TS2304: Cannot find name 'unknown'.\r\n\r\n97     value: unknown;\r\n              ~~~~~~~\r\n\r\n\r\n../../../../../../node_modules/@types/vfile-message/index.d.ts:69:24 - error TS2304: Cannot find name 'unknown'.\r\n\r\n69         [key: string]: unknown;\r\n                          ~~~~~~~\r\n\r\n\r\n../../../../../../node_modules/@types/vfile/index.d.ts:48:15 - error TS2304: Cannot find name 'unknown'.\r\n\r\n48         data: unknown;\r\n                 ~~~~~~~\r\n\r\n\r\nnpm ERR! code ELIFECYCLE\r\nnpm ERR! errno 2\r\nnpm ERR! vscode-automation@1.39.0 compile: `npm run copy-driver && npm run copy-driver-definition && tsc`\r\nnpm ERR! Exit status 2\r\nnpm ERR! \r\nnpm ERR! Failed at the vscode-automation@1.39.0 compile script.\r\nnpm ERR! This is probably not a problem with npm. There is likely additional logging output above.\r\n\r\nnpm ERR! A complete log of this run can be found in:\r\nnpm ERR!     /home/gusbemacbe/.npm/_logs/2019-10-25T03_57_32_025Z-debug.log\r\nerror Command failed with exit code 2.\r\ninfo Visit https://yarnpkg.com/en/docs/cli/install for documentation about this command.\r\nerror Command failed with exit code 1.\r\ninfo Visit https://yarnpkg.com/en/docs/cli/install for documentation about this command.\r\n==> ERROR: A failure occurred in build().\r\n    Aborting...\r\nzsh: exit 4     makepkg -sic\r\nmakepkg -sic  29.87s user 1.85s system 150% cpu 21.040 total\r\n```\r\n\r\n",
      "user":"gusbemacbe"
    },
    {
      "comment":"@gusbemacbe\r\n\r\nOn my machine:\r\n\r\n```\r\n~> node --version\r\nv10.16.3\r\n~> npm --version\r\n6.12.0\r\n~> gulp --version\r\nCLI version: 2.2.0\r\nLocal version: 4.0.2\r\n~> yarn --version\r\n1.19.1\r\n~> electron --version\r\nv6.0.12\r\n~> electron4 --version\r\nv4.2.11\r\n~> which node npm gulp yarn electron electron4\r\n/usr/bin/node\r\n/usr/bin/npm\r\n/usr/bin/gulp\r\n/usr/bin/yarn\r\n/usr/bin/electron\r\n/usr/bin/electron4\r\n```\r\n\r\nYou may try to avoid npm globals during building(strip npm global bin path from $PATH), or use `devtools`(https://wiki.archlinux.org/index.php/DeveloperWiki:Building_in_a_clean_chroot#Convenience_way) for a clean build environment.\r\n\r\nFor short, install `devtools` package, replace your `makepkg` command with single `extra-x86_64-build`. See `extra-x86_64-build -h` for detailed options.",
      "user":"frantic1048"
    },
    {
      "comment":"> or use devtools\r\n> For short, install devtools package, replace your makepkg command with single extra-x86_64-build. See extra-x86_64-build -h for detailed options.\r\n\r\nInstalling with these commands inside the folder `code-transparent`?",
      "user":"gusbemacbe"
    },
    {
      "comment":"> Installing with these commands inside the folder code-transparent?\r\n\r\nInstalling(what) withe these(what) commands inside the folder `code-transparent`?\r\n\r\n---\r\n\r\nAccording to your `which {electron,gulp,node,npm,yarn}` result, the error *may* caused by incorrect npm package resolution.\r\n\r\nAvoid using manual installed(not installed by pacman, but nvm/npm install) `node`/`npm`/...etc may help.\r\n\r\nTo avoid using manually installed packages here's two way:\r\n\r\n*(which I've mentioned in the previous post: https://github.com/Microsoft/vscode/pull/52707#issuecomment-546677856)*\r\n> You may try to avoid npm globals during building(strip npm global bin path from $PATH), or use devtools(https://wiki.archlinux.org/index.php/DeveloperWiki:Building_in_a_clean_chroot#Convenience_way) for a clean build environment.\r\n\r\n*(longer version)*\r\n- **SOLUTION A**: Ensure `node`/`npm`/...etc are resolved to(check with `which` command) `/usr/bin/*` version, typically by temporary modifying `$PATH` environment variable before start building with `makepkg`.\r\n- **SOLUTION B**: Use Arch Linux `devtools`. It provides build scripts like `extra-x86_64-build`, which automatically creates a clean build environment and builds package inside a clean environment for you.\r\n\r\nFurther, there is a **SOLUTION C**: If you just want to use the package without modifying PKGBUILD, you may grab prebuilt `code-transparent` package(also maintained by me) from [`archlinuxcn` repository](https://github.com/archlinuxcn/repo)(which means you do not have to manually build the package by yourself).",
      "user":"frantic1048"
    },
    {
      "comment":"Did anyone try this patch on MacOS?",
      "user":"sergei-dyshel"
    },
    {
      "comment":"I may just be an idiot, but I can't figure out how to clone this repo.  At the top of page, where there'd normally be a link to @sylveon 's fork, it just says [unknown repo](https://github.com/microsoft/vscode/tree/swca).  I can see all changes in the `commits` and `Files Changes` tabs, but don't know how to clone those :/\r\nFor any other PRs in this repo I can just clone the fork at the top of the page and merge the PRs from Master.\r\nApologies for the dumb question :/",
      "user":"vegerot"
    },
    {
      "comment":"I deleted my fork. You can get a patch file to apply to your clone of this repo by going to https://github.com/microsoft/vscode/pull/52707.diff",
      "user":"sylveon"
    },
    {
      "comment":"@vegerot, since the Microsoft developer closed this pull request, the contributor deleted the branch and his repository. But you can get from @frantic1048. Just the blur is just not available in @frantic1048's repository. If you want one quick hack, just use devilspie which can make easily VSCode transparent and blurry, without affecting the text. ",
      "user":"gusbemacbe"
    },
    {
      "comment":"@sylveon \r\n\r\nYour diff patch is no longer working for the latest commit of VSCode. \r\n\r\n```\r\ngit apply -p0 52707.diff\r\nerror: a/package.json: No such file or directory\r\nerror: a/src/main.js: No such file or directory\r\nerror: a/src/vs/code/electron-main/window.ts: No such file or directory\r\nerror: a/src/vs/editor/browser/viewParts/minimap/minimap.ts: No such file or directory\r\nerror: a/src/vs/editor/common/view/minimapCharRenderer.ts: No such file or directory\r\nerror: a/src/vs/platform/windows/common/windows.ts: No such file or directory\r\nerror: a/src/vs/workbench/browser/parts/editor/tabsTitleControl.ts: No such file or directory\r\nerror: a/src/vs/workbench/browser/style.ts: No such file or directory\r\nerror: a/src/vs/workbench/common/theme.ts: No such file or directory\r\nerror: a/src/vs/workbench/contrib/relauncher/electron-browser/relauncher.contribution.ts: No such file or directory\r\nerror: a/src/vs/workbench/contrib/splash/electron-browser/partsSplash.contribution.ts: No such file or directory\r\nerror: a/src/vs/workbench/contrib/terminal/browser/terminalInstance.ts: No such file or directory\r\nerror: a/src/vs/workbench/electron-browser/main.contribution.ts: No such file or directory\r\nerror: a/yarn.lock: No such file or directory\r\nzsh: exit 1     git apply -p0 52707.diff\r\n```\r\n\r\n@frantic1048 \r\n\r\nI decided to install normally code-transparent via archlinuxcn, but I would like to change from `Code - OSS` to `Visual Studio Code Transparent`, and `code` or `code-oss` to `code-transparent`. \r\n\r\nAnd where is the blur?",
      "user":"gusbemacbe"
    },
    {
      "comment":"That's because I already said I'm not gonna maintain it",
      "user":"sylveon"
    },
    {
      "comment":"![Screenshot_20191110_162339](https://user-images.githubusercontent.com/3102803/68541134-c6b72f00-03d6-11ea-85be-22be4f720951.png)\r\n\r\n@gusbemacbe \r\n\r\n> Just the blur is just not available in @frantic1048's repository.\r\n\r\n> And where is the blur?\r\n\r\nTo clarify, on trivial Linux desktops(and even on macOS and Windows), blur is almost identical stuff to transparency. It's your [compositor's](https://en.wikipedia.org/wiki/Compositing_window_manager) response to draw a transparent/blurred window. In short, a compositor is who composite all windows' graphics into a single image and displays on your screen. Each application is drawing content on its own window. For the long story, you may want to search keywords like `x11`, `compositor`,  `compositing manager` and even `Wayland`, to find out how a \"window\" is created.\r\n\r\nI've pointed out checking user's compositor about transparency in [`code-transparent`'s install message](https://aur.archlinux.org/cgit/aur.git/tree/code-transparent.install?h=code-transparent).\r\n\r\n>   2. Ensure your compositor has transparency enabled.\r\n\r\nIt's the same with blur: if your compositor supports blur and you have enabled it, you will get blurred VS Code window. Because it is your compositor's work to take you a transparent/blurred window.\r\n\r\nFor example, I'm using i3wm and [Compton](https://wiki.archlinux.org/index.php/Compton)(the *compositor* mentioned above) in the screenshot. Transparent and blurred windows are all done by Compton, thus as long as I enabled transparent/blur in [Compton's setting](https://github.com/yshui/picom/blob/next/picom.sample.conf#L30), the transparent/blurred windows come to me.\r\n\r\nFor KDE, you may want to check `kwin`'s setting since its KDE's default compositor.",
      "user":"frantic1048"
    },
    {
      "comment":"Interesting, @frantic1048 \r\n\r\nI use KDE, and soon I will try i3. I will install Compton. \r\n\r\nYou forgot of answering my question:\r\n\r\n> I decided to install normally code-transparent via archlinuxcn, but I would like to change from `Code - OSS` to `Visual Studio Code Transparent`, and `code` or `code-oss` to `code-transparent`.",
      "user":"gusbemacbe"
    },
    {
      "comment":">You forgot of answering my question:\r\n>\r\n>>    but I would like to change from Code - OSS to Visual Studio Code Transparent, and code or code-oss to code-transparent.\r\n\r\nI've no idea what to answer(where's the question ?). The source code of the package just lies here: https://aur.archlinux.org/cgit/aur.git/tree/?h=code-transparent, You can modify anything as you wish.",
      "user":"frantic1048"
    },
    {
      "comment":"@frantic1048 !\r\n\r\nI decided to uninstall from archlinuxcn and to build via chroot. I changed from `code-oss` to `code-transparent`, but unfortunately it failed:\r\n\r\n```\r\n==> Validating source files with sha512sums...\r\n    code ... Skipped\r\n    code.js ... FAILED\r\n    code.sh ... Passed\r\n    product_json.diff ... FAILED\r\n    enable-proposed-apis.diff ... Passed\r\n    transparent.diff ... Passed\r\n```\r\n\r\nPlease check the files:  [code-transparent.zip](https://github.com/microsoft/vscode/files/3828916/code-transparent.zip)\r\n",
      "user":"gusbemacbe"
    },
    {
      "comment":"@gusbemacbe If you didn't update the integrity variable after changing the source, it is intended to fail.\r\n\r\nYou may need a quick look at PKGBUILD introduction about integrity section:\r\n\r\n- PKGBUILD#Integrity: https://wiki.archlinux.org/index.php/PKGBUILD#Integrity\r\n- 2016-12-11-getting_started_with_arch_linux_packaging.txt: https://archwomen.org/media/project_classroom/classlogs/2016-12-11-getting_started_with_arch_linux_packaging.txt (search for `sums` keyword)\r\n\r\nAnd further, a fundamental understanding of PKGBUILD structure is recommended if you are going to DIY. There are lots of wiki pages and documentation about PKGBUILD/`makepkg`. Also, you can go #archlinux IRC and similar communities for help about PKGBUILD.",
      "user":"frantic1048"
    },
    {
      "comment":"@frantic1048 \r\n\r\nIt has worked now. \r\n\r\nThe app is renamed appropriately VSCode Transparent (short) and Visual Studio Code Transparent. \r\n\r\n![image](https://user-images.githubusercontent.com/2257024/68587914-fc0b5d80-0466-11ea-9f1d-4831d78f76d7.png)\r\n\r\n![image](https://user-images.githubusercontent.com/2257024/68588146-89e74880-0467-11ea-9809-ee1fbb9d27a8.png)\r\n\r\n![image](https://user-images.githubusercontent.com/2257024/68588211-adaa8e80-0467-11ea-99c9-715bce9f9e37.png)\r\n\r\nIn spite of I being an user of KDE, I installed Compton, created a folder and a file - `~/.config/compton/compton.conf`, but it did not work. Neither with KWin.\r\n\r\nBut the blur worked with devilspie:\r\n\r\n![image](https://user-images.githubusercontent.com/2257024/68589577-00d21080-046b-11ea-9f65-f9d120ef838d.png)\r\n",
      "user":"gusbemacbe"
    },
    {
      "comment":"@gusbemacbe You don't need compton to blur it, the default kwin compositor can do it just fine.\r\nUsing this script https://store.kde.org/p/1294604 is all you need.",
      "user":"mallgrab"
    },
    {
      "comment":"@mallgrab \r\n\r\nIt does not work. Here is:\r\n\r\n![kwin_unworking](https://user-images.githubusercontent.com/2257024/68616818-95a53000-04a4-11ea-91c0-7d1bab5e56ff.png)\r\n",
      "user":"gusbemacbe"
    },
    {
      "comment":"@gusbemacbe \r\n\r\nIt seems the window class name is not correct.\r\n\r\nOn X11 you can find window class name by `xprop` and click the window you are interested in.\r\nOn Wayland it depends on compositor, e.g. on Sway there is `swaymsg -t get_tree` for window class name info.",
      "user":"frantic1048"
    },
    {
      "comment":"@Otakumouse is there any chance you could share the compiled version as yarn watch run gives out Task never defined: run error ?",
      "user":"punidramesh"
    }
  ],
  "repository":"vscode",
  "user":"sylveon"
}