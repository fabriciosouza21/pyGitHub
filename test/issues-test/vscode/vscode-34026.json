{
  "comments":[
    {
      "comment":"Also consider a way for extensions to contribute link detection rules",
      "user":"isidorn"
    },
    {
      "comment":"@sandy081 I'm just trying to step through this code to understand why my links aren't being detected, but I'm really confused by this code:\r\n\r\nhttps://github.com/Microsoft/vscode/blob/master/src/vs/workbench/parts/debug/browser/linkDetector.ts#L48-L53\r\n\r\n```ts\r\n\t\t\twhile (match !== null) {\r\n\t\t\t\tlet resource: uri = null;\r\n\t\t\t\tif (!resource) {\r\n\t\t\t\t\tmatch = pattern.exec(text);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n```\r\n\r\nAs far as I can tell, the rest of the code in this block will never execute - `resource` is always initialised as null then the if statement `continue`s?",
      "user":"DanTup"
    },
    {
      "comment":"In fact, it looks like maybe the minifier stripped all the code out because of that?\r\n\r\n![screen shot 2018-03-29 at 12 27 23](https://user-images.githubusercontent.com/1078012/38086528-9b74a022-334c-11e8-8008-a172e0a11ff2.png)\r\n",
      "user":"DanTup"
    },
    {
      "comment":"@isidorn Is anyone able to review the comments above? Am I misreading the code or is this a bug that means this will never work? :(",
      "user":"DanTup"
    },
    {
      "comment":"@DanTup yes this seems like a clear bug on our end. Would you be interested in providing a PR which fixes this.\r\nThis was initialy done by our previous internt @michelkaporin ",
      "user":"isidorn"
    },
    {
      "comment":"@isidorn I haven't contributed any real code before, do I need to (and if so, are there instructions on how to) run Code from source? (I checked [contributing.md](https://github.com/Microsoft/vscode/blob/master/CONTRIBUTING.md) but it doesn't seem to cover it). Also, are there automated tests around this sort of functionality I could extend?",
      "user":"DanTup"
    },
    {
      "comment":"@DanTup https://github.com/Microsoft/vscode/wiki/How-to-Contribute\r\nWe do not have tests around link detection unfortunetly, so you would have to manually test it out\r\n\r\n@gregvanl our contributing.md should have a pointer to our wiki how to contribute page imho",
      "user":"isidorn"
    },
    {
      "comment":"I did have this on my list to try and look at, but I never gotten around to it. I think it's unlikely to happen anytime soon so it may be better for someone else to look at.\r\n\r\n(I do a lot of people would benefit in fixing - many issues have been closed as dupes of this, though is in the backlog marked as debt, when the above is really a bug).",
      "user":"DanTup"
    },
    {
      "comment":"@isidorn Coming back to this, I noticed fixing the detection won't work for us, as our links have been rewritten as URIs, like:\r\n\r\n```\r\nflutter: #0      _GalleryAppState.build (package:flutter_gallery/gallery/app.dart:131:5)\r\nflutter: #1      StatefulElement.build (package:flutter/src/widgets/framework.dart:3809:27)\r\n```\r\n\r\nWas there any progress on allowing extensions to contribute rules for link detection? (I couldn't find anything)",
      "user":"DanTup"
    },
    {
      "comment":"No porgress here",
      "user":"isidorn"
    },
    {
      "comment":"I just made a Pull Request that brings this feature back (#65929). I'm curious to hear your thoughts, @isidorn.",
      "user":"mymikemiller"
    },
    {
      "comment":"FWIW, while setting up a repro using the mock debugger today, I noticed that OutputEvents can be given source locations (it didn't show in the completion until I cast it like `new OutputEvent(`${message}\\n`, category) as OutputEvent & DebugProtocol.OutputEvent`.\r\n\r\nSo, I realised I could regex my paths out of the call stacks and just attach them to each line this way.\r\n\r\nBefore (no links):\r\n\r\n![screenshot 2019-01-07 at 11 40 09 am](https://user-images.githubusercontent.com/1078012/50766442-200f7880-1271-11e9-8044-b07423151c49.png)\r\n\r\nAfter (links):\r\n\r\n![screenshot 2019-01-07 at 11 40 58 am](https://user-images.githubusercontent.com/1078012/50766447-256cc300-1271-11e9-9343-3f290badd5fc.png)\r\n\r\nAs an advantage, this allows mapping the `package:` URIs to the correct source file, and also allows truncating the visible file path if desired to take up less space.",
      "user":"DanTup"
    },
    {
      "comment":"@isidorn This issue was also used to track making it possible for extensions to add additional regex's (see your comment at the end of https://github.com/Microsoft/vscode/pull/30882). Is that now possible, or should I open a new issue?",
      "user":"gregg-miskelly"
    },
    {
      "comment":"@gregg-miskelly let's reopen this issue. We have cleaned up some link detection however it is still not perfect obviously.",
      "user":"isidorn"
    },
    {
      "comment":"Extension host protocol does also break\r\n![grafik](https://user-images.githubusercontent.com/845152/65272795-176d8280-db20-11e9-8af2-bdb691483dc1.png)\r\n",
      "user":"LWChris"
    },
    {
      "comment":"Would love to get a link detection API I can use internally for hover/completion when doing plaintext handling in completion / hover: https://github.com/microsoft/vscode/issues/79841",
      "user":"octref"
    },
    {
      "comment":"Please fix this for GDB under msys2.",
      "user":"lichray"
    },
    {
      "comment":"I've noticed that link detection is inconsistent between debug console and terminal. So for example `\"http://example.com/abcd(efgh)\"` will be detected as a link in both, but the final `)` will be (correctly) detected as being part of the link in the terminal but not in the debug console. Is this the same issue as this one or should I open a new one?",
      "user":"jribbens"
    },
    {
      "comment":"Not sure if this is entirely related, but I have a watch task compiling my TypeScript code in the background. When it errors, it produces an output like so:\r\n\r\n```bash\r\nmain.ts:14:11 - error TS2551: Property 'losg' does not exist on type 'Console'. Did you mean 'log'?   \r\n\r\n14   console.losg(`${p_data.name} => ${p_data.json ? JSON.stringify(p_data.json) : p_data.interval}`);\r\n```\r\n\r\nIt would be ideal to be able to left click on that `main.ts:14:11` string to get me to that line, similar to the debug window functionality.\r\n\r\nAs a work-around I can ctrl-click on that string, which seems to copy that text to the search field in the main editor, after which I can press enter, to get me to the correct file/line. That's workable, but obviously not as quick as a single click. \r\n\r\n",
      "user":"MarByteBeep"
    },
    {
      "comment":"Case moved here from #135770\r\n\r\nFor this Python stacktrace snippet the integrated terminal correctly detects the link including the `line 99`.\r\nOn the internal console it only detects the file path but not the line information which is quite annoying.\r\n\r\n```\r\nFile \"/Users/levrik/code/project/api/context.py\", line 99, in __init__\r\n    self.document_service = DocumentService(\r\n```",
      "user":"levrik"
    },
    {
      "comment":"I am running into the same issue as @levrik. Clicking on a Python stacktrace takes me to the top of the file (not the line of code) when using internal console.\r\nMacOS Monterey\r\nVScode Version: 1.66.0 ",
      "user":"jsolly"
    }
  ],
  "repository":"vscode",
  "user":"isidorn"
}