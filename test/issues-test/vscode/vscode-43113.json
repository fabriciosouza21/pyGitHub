{
  "comments":[
    {
      "comment":"This might be a bug of mine, but this works in stable, but fails in Insiders.\r\n\r\nYou'll need a copy of the Dart SDK for the extension to activate correctly. If you don't want to install/add to PATH you can get a Windows zip from [here](https://storage.googleapis.com/dart-archive/channels/stable/release/1.24.3/sdk/dartsdk-windows-x64-release.zip) (or others from [this page](https://www.dartlang.org/install/archive)) and then set the `dart.sdkPath` setting to point at the unzipped folder.\r\n\r\n1. Install the [Dart Code extension](https://marketplace.visualstudio.com/items?itemName=Dart-Code.dart-code) or clone [the repo](https://github.com/Dart-Code/Dart-Code) and open and hit F5 to launch in extension dev host\r\n2. Create a new folder with a file at `bin\\main.dart` with the following contents:\r\n  ```dart\r\n  main() {\r\n    print(\"Hello, world!\");\r\n  }\r\n  ```\r\n3. Press F5 and select Dart\r\n4. Nothing happens\r\n\r\nIn Stable, after selecting Dart it will create the launch.json (and the pressing F5 again will launch the debugger).\r\n\r\nI believe an error is happening after calling my `resolveDebugConfiguration`, the source code for which is at https://github.com/Dart-Code/Dart-Code/blob/5d0c38b1b03d815a2516acfc008f3c7f8a9417b8/src/providers/debug_config_provider.ts#L48\r\n\r\n@weinand ",
      "user":"DanTup"
    },
    {
      "comment":"I tried with \"All Exceptions\" ticked, but it didn't seem to break on anything (even though if I breakpoint `resolveDebugConfiguration` then step out, I do seem to end up in exception handling code).",
      "user":"DanTup"
    },
    {
      "comment":"If I keep stepping, I end up here (which seems unexpected):\r\n\r\n![No handler](https://user-images.githubusercontent.com/1078012/35931614-063c5608-0c2d-11e8-8881-36cebaec2552.png)\r\n\r\nIf I comment out the implementation of `resolveDebugConfiguration` it still fails in the same way.\r\n",
      "user":"DanTup"
    },
    {
      "comment":"In your package.json I do not see any debug related activationEvents. \r\nPlease add a \"onDebug\" and see whether this makes a difference.",
      "user":"weinand"
    },
    {
      "comment":"@weinand No difference (though not all that surprised, the extension was definitely activated already, as I can step through `resolveDebugConfiguration` prior to it stopping).",
      "user":"DanTup"
    },
    {
      "comment":"Here's our chat on gitter which explains the issue. I have pushed a fix so the error propagets to the user, so this error is not so mysterious\r\n\r\nIsidor Nikolic @isidorn 21:14\r\n@DanTup the issue is that your configuration returned does not have a type field which is mandatory\r\n@DanTup the issue on the vscode side is that we do not propogate this error properly\r\n\r\nDanny Tuppeny @DanTup 21:14\r\n@isidorn Hmmm, how does this work in stable?\r\njust having a quick look\r\n\r\nIsidor Nikolic @isidorn 21:15\r\n@DanTup I probably refactored some code which was more error tolerant\r\n\r\nDanny Tuppeny @DanTup 21:16\r\nI do return a type from provideDebugConfigurations - isn't that what gets passed back in to resolveDebugConfiguration?\r\nhmmm, I'm not even hitting breakpoints in my provideDebugConfigurations method now... seems wonky... just debugging\r\n\r\nIsidor Nikolic @isidorn 21:18\r\n@DanTup ok. I got it to work. In the setupDebugConfig if you add these lines, all will work nicely\r\ndebugConfig.type = \"dart-cli\";\r\ndebugConfig.request = \"launch\";\r\nok. So let's clarify something. ProvideDebugConfigurations is being called when the launch.json is getting genereated. And that works out of the box without any changes\r\n\r\nDanny Tuppeny @DanTup 21:20\r\nshould provideDebugConfigurations be called before resolveDebugConfig? In stable right now, it doesn't seem to be for me (though I thought it should?)\r\n\r\nIsidor Nikolic @isidorn 21:20\r\nResolveDebugConfigurations is being called when the configuarionts need resolving before we actually start debuging, and that is called when a user presses F5. That one is not working witouht my changes to your extension. The ResolveDebugConfiguations always needs to return a properly working launch configuration (which your extension was not doing)\r\nProvideDebugConfigurations is only called when the launch.json needs to be genereded. And just hitting F5 does not have to generate the launch.json, it can create the launch configuration on the fly\r\n\r\nDanny Tuppeny @DanTup 21:22\r\nRight, gotcha. So something changed that means resolveDebugConfig needs to explicitly set the type and request whereas it didn't before?\r\n\r\nIsidor Nikolic @isidorn 21:23\r\nThat might have changed. I am not sure since this milestone is 2 months and we did a bunch of work. You can do some bisecting on our sources if you want to find the exact change.\r\nThe best thing to do IMHO would be to update your extension with the fixed ResolveDebugConfigurations call\r\nAppologies if we broke your extension also. It was not on purpose.",
      "user":"isidorn"
    }
  ],
  "repository":"vscode",
  "user":"DanTup"
}