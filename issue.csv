 Sadness, 0.561416, "SpringApplication makes it hard to get hold of the application context before it's refreshed."
,, "@michael-simons came up with this:"
 Joy, 0.706281, "It would be nice if the initialiser wasn't needed and the API provided an easier way to access the context before it's refreshed."
 Joy Analytical, 0.539593 0.69572, "Background was (again) creating an example for my book how to use Spring 5 enhancements out of the box with Spring Boot."
 Analytical, 0.920855, "I assume that this question will arise, especially with the functional router."
,, "way to access the context before it's refreshed"
 Analytical, 0.93884, "Isn't that the definition of an applicationContextInitializer?"
 Tentative, 0.976993, "How could the API be any simpler without duplicating?"
 Tentative, 0.909883, "I - as a user - would have been looking for something like:"
,, ""
,, "and having Boot delegate to an Initializer for me."
 Analytical, 0.762356, "As a user I'd expect to have something that worked in integration tests with @SpringBootTest as well as when I run my main method (changing the API of SpringApplication doesn't help there)."
 Joy Analytical, 0.654165 0.87913, "I'm not sure, however the pure Spring example in the Kotlin blog post involves less ceremony:"
,, ""
 Sadness, 0.581062, "It's a shame that SpringApplication gives you an extra hoop to jump through."
 Joy Tentative Analytical, 0.535149 0.907036 0.821913, "Perhaps we'll have to live with that, but I think it's worth some thought."
 Joy Tentative Analytical, 0.58202 0.647986 0.687768, "Doesn't seem to take integration tests with @SpringBootTest into account as well… It's a good point!"
 Analytical, 0.807862, "+1 for allowing using the functional bean registration API with Spring Boot, even if I am not sure yet exactly where should be the entry point."
,, "For the record, here is the Kotlin function bean registration I used before switching to the app to Boot."
,, "I found no proper wat to integrate with Boot so I had to remove it to use @Bean but I would be happy to restore it if you provide a way to do that easily."
 Analytical, 0.588596, "If I remember well I had no way to integrate my functional bean registration at the right level in Spring Boot application context lifecycle even with @bclozel help."
 Joy Analytical, 0.512495 0.911169, "Just to complete that loop: if you define the initializer above as a standalone class and declare it in spring.factories it will work with @SpringBootTest and in a simple one-line main() method."
 Sadness Tentative Analytical, 0.762941 0.716301 0.908301, "I see no reason why that wouldn't work with Kotlin if anyone cares."
 Analytical, 0.532616, "I think that @dsyer's approach is ok, can also be used through context.initializer.classes,"
 Tentative Analytical, 0.647986 0.781949, "but if people see those nice examples, they forget about IT tests… (like I did)."
